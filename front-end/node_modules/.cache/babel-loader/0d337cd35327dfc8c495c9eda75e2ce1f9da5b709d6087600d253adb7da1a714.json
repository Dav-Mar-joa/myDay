{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import axios from'axios';import LogoutButton from'./LogoutButton';// Importer le composant LogoutButton\nimport{Link}from'react-router-dom';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import zoomPlugin from'chartjs-plugin-zoom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(zoomPlugin);ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const Historique=()=>{const[chartData,setChartData]=useState({});const[feelings,setFeelings]=useState([\"\",\"\",\"\",\"\"]);const[phraseGratitude,setPhraseGratitude]=useState(\"\");const[historiqueGratitude,setHistoriqueGratitude]=useState([]);const[gratitudeDates,setDatesGratitude]=useState([]);const[reglesDates,setReglesDates]=useState([]);const[showFeeling1,setShowFeeling1]=useState(true);const[showFeeling2,setShowFeeling2]=useState(true);const[showFeeling3,setShowFeeling3]=useState(true);const[showFeeling4,setShowFeeling4]=useState(true);const[showRegles,setShowRegles]=useState(true);const[timeRange,setTimeRange]=useState('3mois');const filtrerDonneesParTemps=(data,range)=>{const maintenant=new Date();let limite;switch(range){case'1hour':// limite = new Date(maintenant.setMonth(maintenant.getMonth() - 1));\nlimite=new Date(maintenant.setHours(maintenant.getHours()-1));break;case'3mois':// limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\nlimite=new Date(maintenant.setMonth(maintenant.getMonth()-3));break;case'6hour':// limite = new Date(maintenant.setMonth(maintenant.getMonth() - 6));\nlimite=new Date(maintenant.setHours(maintenant.getHours()-6));break;default:return data;}return data.filter(entry=>new Date(entry.userLocalDate)>=limite);};// useEffect(() => {\n//   const fetchUserFeelingsAndHistory = async () => {\n//     try {\n//       const API_URL =\n//         window.location.hostname === \"localhost\"\n//           ? \"http://localhost:4000\"\n//           : \"https://myday-back.onrender.com\";\n//       const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\n//         method: \"GET\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         credentials: 'include'\n//       });\n//       const feelingsData = await feelingsResponse.json();\n//       if (feelingsData && feelingsData.feelings) {\n//         setFeelings(feelingsData.feelings);\n//         setPhraseGratitude(feelingsData.phraseGratitude || []);\n//         setReglesDates(feelingsData.regles || []);\n//       }\n//       const historyResponse = await axios.get(`${API_URL}/user-history`, {\n//         withCredentials: true,\n//       });\n//       const historyData = historyResponse.data;\n//       historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\n//       const labels = historyData.map(entry => {\n//         const date = new Date(entry.userLocalDate);\n//         return date.toLocaleDateString('fr-FR', {\n//           day: '2-digit',\n//           month: 'short',\n//         });\n//       });\n//       const gratitudeHistory = historyData\n//         .map(entry => entry.phraseGratitude)\n//         .filter(phrase => phrase && phrase.trim() !== \"\");\n//       const gratitudeDates = historyData\n//         .map(entry => new Date(entry.userLocalDate).toLocaleDateString())\n//         .filter((_, index) => gratitudeHistory[index]);\n//       setDatesGratitude(gratitudeDates);\n//       setHistoriqueGratitude(gratitudeHistory);\n//       const data = {\n//         labels,\n//         datasets: [\n//           {\n//             label: feelings[0],\n//             data: historyData.map(entry => entry.feeling1),\n//             borderColor: 'rgba(75, 192, 192, 1)',\n//             borderWidth: 2,\n//             pointRadius: 1,\n//             pointHoverRadius: 4,\n//             fill: false,\n//             hidden: !showFeeling1\n//           },\n//           {\n//             label: feelings[1],\n//             data: historyData.map(entry => entry.feeling2),\n//             borderColor: 'rgba(153, 102, 255, 1)',\n//             borderWidth: 2,\n//             pointRadius: 1,\n//             pointHoverRadius: 4,\n//             fill: false,\n//             hidden: !showFeeling2\n//           },\n//           {\n//             label: feelings[2],\n//             data: historyData.map(entry => entry.feeling3),\n//             borderColor: 'rgba(255, 99, 132, 1)',\n//             borderWidth: 2,\n//             pointRadius: 1,\n//             pointHoverRadius: 4,\n//             fill: false,\n//             hidden: !showFeeling3\n//           },\n//           {\n//             label: feelings[3],\n//             data: historyData.map(entry => entry.feeling4),\n//             borderColor: 'rgba(255, 206, 86, 1)',\n//             borderWidth: 2,\n//             pointRadius: 1,\n//             pointHoverRadius: 4,\n//             fill: false,\n//             hidden: !showFeeling4\n//           },\n//           {\n//             label: 'Règles',\n//             data: reglesDates.map((regle, index) => {\n//               return regle === true ? 0 : null;\n//             }),\n//             borderColor: 'rgba(0, 0, 0, 1)',\n//             backgroundColor: 'rgba(0, 0, 0, 1)',\n//             borderWidth: 4,\n//             pointRadius: 4,\n//             pointHoverRadius: 4,\n//             fill: true,\n//             hidden: !showRegles\n//           }\n//         ],\n//       };\n//       setChartData(data);\n//     } catch (error) {\n//       console.error(\"Erreur lors de la récupération des données :\", error);\n//     }\n//   };\n//   fetchUserFeelingsAndHistory();\n// }, [feelings, reglesDates, showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles]);\nuseEffect(()=>{const fetchUserFeelingsAndHistory=async()=>{try{var _feelingsData$regles;const API_URL=window.location.hostname===\"localhost\"?\"http://localhost:4000\":\"https://myday-back.onrender.com\";const feelingsResponse=await fetch(`${API_URL}/user-feelings`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"},credentials:'include'});const feelingsData=await feelingsResponse.json();if(feelingsData&&feelingsData.feelings){// Ne relance pas setFeelings inutilement si les valeurs sont déjà identiques\nsetFeelings(prev=>JSON.stringify(prev)!==JSON.stringify(feelingsData.feelings)?feelingsData.feelings:prev);setPhraseGratitude(feelingsData.phraseGratitude||[]);setReglesDates(feelingsData.regles||[]);}const historyResponse=await axios.get(`${API_URL}/user-history`,{withCredentials:true});const historyData=historyResponse.data;historyData.sort((a,b)=>new Date(a.userLocalDate)-new Date(b.userLocalDate));const filteredHistory=filtrerDonneesParTemps(historyData,timeRange);const labels=filteredHistory.map(entry=>{const date=new Date(entry.userLocalDate);return date.toLocaleDateString('fr-FR',{day:'2-digit',month:'short'});});const gratitudeHistory=historyData.map(entry=>entry.phraseGratitude).filter(phrase=>phrase&&phrase.trim()!==\"\");const gratitudeDates=historyData.map(entry=>new Date(entry.userLocalDate).toLocaleDateString()).filter((_,index)=>gratitudeHistory[index]);setDatesGratitude(gratitudeDates);setHistoriqueGratitude(gratitudeHistory);const data={labels,datasets:[{label:feelingsData.feelings[0],data:historyData.map(entry=>entry.feeling1),borderColor:'rgba(75, 192, 192, 1)',borderWidth:2,pointRadius:1,pointHoverRadius:4,fill:false,hidden:!showFeeling1},{label:feelingsData.feelings[1],data:historyData.map(entry=>entry.feeling2),borderColor:'rgba(153, 102, 255, 1)',borderWidth:2,pointRadius:1,pointHoverRadius:4,fill:false,hidden:!showFeeling2},{label:feelingsData.feelings[2],data:historyData.map(entry=>entry.feeling3),borderColor:'rgba(255, 99, 132, 1)',borderWidth:2,pointRadius:1,pointHoverRadius:4,fill:false,hidden:!showFeeling3},{label:feelingsData.feelings[3],data:historyData.map(entry=>entry.feeling4),borderColor:'rgba(255, 206, 86, 1)',borderWidth:2,pointRadius:1,pointHoverRadius:4,fill:false,hidden:!showFeeling4},{label:'Règles',data:((_feelingsData$regles=feelingsData.regles)===null||_feelingsData$regles===void 0?void 0:_feelingsData$regles.map(regle=>regle===true?0:null))||[],borderColor:'rgba(0, 0, 0, 1)',backgroundColor:'rgba(0, 0, 0, 1)',borderWidth:4,pointRadius:4,pointHoverRadius:4,fill:true,hidden:!showRegles}]};setChartData(data);}catch(error){console.error(\"Erreur lors de la récupération des données :\",error);}};fetchUserFeelingsAndHistory();},[showFeeling1,showFeeling2,showFeeling3,showFeeling4,showRegles,timeRange]);const options={responsive:true,maintainAspectRatio:false,scales:{x:{ticks:{font:{weight:'bold'}}}},plugins:{legend:{display:true,position:'top',labels:{font:{size:14,family:'Arial',weight:'bold'},boxWidth:15,boxHeight:5,padding:20,color:'#333'}},zoom:{pan:{enabled:true,mode:'x'},zoom:{wheel:{enabled:true},pinch:{enabled:true},mode:'x'}}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Historique des \\xC9motions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:chartData.labels&&/*#__PURE__*/_jsx(Line,{data:chartData,options:options})}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-filter\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeRange('1hour'),children:\"1 h\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeRange('3mois'),children:\"3 mois\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeRange('6hour'),children:\"6 h\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeRange('tout'),children:\"Tout\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showFeeling1,onChange:()=>setShowFeeling1(!showFeeling1)}),feelings[0]]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showFeeling2,onChange:()=>setShowFeeling2(!showFeeling2)}),feelings[1]]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showFeeling3,onChange:()=>setShowFeeling3(!showFeeling3)}),feelings[2]]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showFeeling4,onChange:()=>setShowFeeling4(!showFeeling4)}),feelings[3]]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showRegles,onChange:()=>setShowRegles(!showRegles)}),\"R\\xE8gles\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"historique-gratitude\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h7\",children:\"Historique des mantras\"}),/*#__PURE__*/_jsx(\"div\",{className:\"fenetre-gratitude\",children:historiqueGratitude.length>0?historiqueGratitude.map((phrase,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[phrase,\" : (\",/*#__PURE__*/_jsxs(\"em\",{children:[gratitudeDates[index],\")\"]})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"hr-phraseGratitude\"})]},index)):/*#__PURE__*/_jsx(\"li\",{children:\"Aucune phrase de gratitude disponible\"})})]}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"submit-button-history\",children:\"Emotions\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(LogoutButton,{})}),/*#__PURE__*/_jsx(\"p\",{className:\"droits\",children:\"\\xA9 2025 myDay. Tous droits r\\xE9serv\\xE9s. Cette application et son contenu sont prot\\xE9g\\xE9s par les lois en vigueur sur la propri\\xE9t\\xE9 intellectuelle. \"})]})});};export default Historique;","map":{"version":3,"names":["React","useState","useEffect","Line","axios","LogoutButton","Link","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","zoomPlugin","jsx","_jsx","jsxs","_jsxs","register","Historique","chartData","setChartData","feelings","setFeelings","phraseGratitude","setPhraseGratitude","historiqueGratitude","setHistoriqueGratitude","gratitudeDates","setDatesGratitude","reglesDates","setReglesDates","showFeeling1","setShowFeeling1","showFeeling2","setShowFeeling2","showFeeling3","setShowFeeling3","showFeeling4","setShowFeeling4","showRegles","setShowRegles","timeRange","setTimeRange","filtrerDonneesParTemps","data","range","maintenant","Date","limite","setHours","getHours","setMonth","getMonth","filter","entry","userLocalDate","fetchUserFeelingsAndHistory","_feelingsData$regles","API_URL","window","location","hostname","feelingsResponse","fetch","method","headers","credentials","feelingsData","json","prev","JSON","stringify","regles","historyResponse","get","withCredentials","historyData","sort","a","b","filteredHistory","labels","map","date","toLocaleDateString","day","month","gratitudeHistory","phrase","trim","_","index","datasets","label","feeling1","borderColor","borderWidth","pointRadius","pointHoverRadius","fill","hidden","feeling2","feeling3","feeling4","regle","backgroundColor","error","console","options","responsive","maintainAspectRatio","scales","x","ticks","font","weight","plugins","legend","display","position","size","family","boxWidth","boxHeight","padding","color","zoom","pan","enabled","mode","wheel","pinch","children","className","onClick","type","checked","onChange","length","to"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Historique.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport LogoutButton from './LogoutButton'; // Importer le composant LogoutButton\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport zoomPlugin from 'chartjs-plugin-zoom';\r\nChartJS.register(zoomPlugin);\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Historique = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [phraseGratitude, setPhraseGratitude] = useState(\"\");\r\n  const [historiqueGratitude, setHistoriqueGratitude] = useState([]);\r\n  const [gratitudeDates, setDatesGratitude] = useState([]);\r\n  const [reglesDates, setReglesDates] = useState([]);\r\n  \r\n  const [showFeeling1, setShowFeeling1] = useState(true);\r\n  const [showFeeling2, setShowFeeling2] = useState(true);\r\n  const [showFeeling3, setShowFeeling3] = useState(true);\r\n  const [showFeeling4, setShowFeeling4] = useState(true);\r\n  const [showRegles, setShowRegles] = useState(true);\r\n\r\n  const [timeRange, setTimeRange] = useState('3mois');\r\n\r\nconst filtrerDonneesParTemps = (data, range) => {\r\n  const maintenant = new Date();\r\n  let limite;\r\n\r\n  switch (range) {\r\n    case '1hour':\r\n      // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 1));\r\n      limite = new Date(maintenant.setHours(maintenant.getHours() - 1));\r\n      break;\r\n    case '3mois':\r\n      // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\r\n      limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\r\n      break;\r\n    case '6hour':\r\n      // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 6));\r\n      limite = new Date(maintenant.setHours(maintenant.getHours() - 6));\r\n      break;\r\n    default:\r\n      return data;\r\n  }\r\n\r\n  return data.filter(entry => new Date(entry.userLocalDate) >= limite);\r\n};\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const fetchUserFeelingsAndHistory = async () => {\r\n  //     try {\r\n  //       const API_URL =\r\n  //         window.location.hostname === \"localhost\"\r\n  //           ? \"http://localhost:4000\"\r\n  //           : \"https://myday-back.onrender.com\";\r\n\r\n  //       const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\r\n  //         method: \"GET\",\r\n  //         headers: { \"Content-Type\": \"application/json\" },\r\n  //         credentials: 'include'\r\n  //       });\r\n\r\n  //       const feelingsData = await feelingsResponse.json();\r\n  //       if (feelingsData && feelingsData.feelings) {\r\n  //         setFeelings(feelingsData.feelings);\r\n  //         setPhraseGratitude(feelingsData.phraseGratitude || []);\r\n  //         setReglesDates(feelingsData.regles || []);\r\n  //       }\r\n\r\n  //       const historyResponse = await axios.get(`${API_URL}/user-history`, {\r\n  //         withCredentials: true,\r\n  //       });\r\n\r\n  //       const historyData = historyResponse.data;\r\n  //       historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\r\n\r\n  //       const labels = historyData.map(entry => {\r\n  //         const date = new Date(entry.userLocalDate);\r\n  //         return date.toLocaleDateString('fr-FR', {\r\n  //           day: '2-digit',\r\n  //           month: 'short',\r\n  //         });\r\n  //       });\r\n\r\n  //       const gratitudeHistory = historyData\r\n  //         .map(entry => entry.phraseGratitude)\r\n  //         .filter(phrase => phrase && phrase.trim() !== \"\");\r\n\r\n  //       const gratitudeDates = historyData\r\n  //         .map(entry => new Date(entry.userLocalDate).toLocaleDateString())\r\n  //         .filter((_, index) => gratitudeHistory[index]);\r\n\r\n  //       setDatesGratitude(gratitudeDates);\r\n  //       setHistoriqueGratitude(gratitudeHistory);\r\n\r\n  //       const data = {\r\n  //         labels,\r\n  //         datasets: [\r\n  //           {\r\n  //             label: feelings[0],\r\n  //             data: historyData.map(entry => entry.feeling1),\r\n  //             borderColor: 'rgba(75, 192, 192, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling1\r\n  //           },\r\n  //           {\r\n  //             label: feelings[1],\r\n  //             data: historyData.map(entry => entry.feeling2),\r\n  //             borderColor: 'rgba(153, 102, 255, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling2\r\n  //           },\r\n  //           {\r\n  //             label: feelings[2],\r\n  //             data: historyData.map(entry => entry.feeling3),\r\n  //             borderColor: 'rgba(255, 99, 132, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling3\r\n  //           },\r\n  //           {\r\n  //             label: feelings[3],\r\n  //             data: historyData.map(entry => entry.feeling4),\r\n  //             borderColor: 'rgba(255, 206, 86, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling4\r\n  //           },\r\n  //           {\r\n  //             label: 'Règles',\r\n  //             data: reglesDates.map((regle, index) => {\r\n  //               return regle === true ? 0 : null;\r\n  //             }),\r\n  //             borderColor: 'rgba(0, 0, 0, 1)',\r\n  //             backgroundColor: 'rgba(0, 0, 0, 1)',\r\n  //             borderWidth: 4,\r\n  //             pointRadius: 4,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: true,\r\n  //             hidden: !showRegles\r\n  //           }\r\n  //         ],\r\n  //       };\r\n\r\n  //       setChartData(data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Erreur lors de la récupération des données :\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchUserFeelingsAndHistory();\r\n  // }, [feelings, reglesDates, showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserFeelingsAndHistory = async () => {\r\n      try {\r\n        const API_URL =\r\n          window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:4000\"\r\n            : \"https://myday-back.onrender.com\";\r\n  \r\n        const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\r\n          method: \"GET\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          credentials: 'include'\r\n        });\r\n  \r\n        const feelingsData = await feelingsResponse.json();\r\n        if (feelingsData && feelingsData.feelings) {\r\n          // Ne relance pas setFeelings inutilement si les valeurs sont déjà identiques\r\n          setFeelings(prev => JSON.stringify(prev) !== JSON.stringify(feelingsData.feelings) ? feelingsData.feelings : prev);\r\n          setPhraseGratitude(feelingsData.phraseGratitude || []);\r\n          setReglesDates(feelingsData.regles || []);\r\n        }\r\n  \r\n        const historyResponse = await axios.get(`${API_URL}/user-history`, {\r\n          withCredentials: true,\r\n        });\r\n  \r\n        const historyData = historyResponse.data;\r\n        historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\r\n        const filteredHistory = filtrerDonneesParTemps(historyData, timeRange);\r\n        const labels = filteredHistory.map(entry => {\r\n          const date = new Date(entry.userLocalDate);\r\n          return date.toLocaleDateString('fr-FR', {\r\n            day: '2-digit',\r\n            month: 'short',\r\n          });\r\n        });\r\n  \r\n        const gratitudeHistory = historyData\r\n          .map(entry => entry.phraseGratitude)\r\n          .filter(phrase => phrase && phrase.trim() !== \"\");\r\n  \r\n        const gratitudeDates = historyData\r\n          .map(entry => new Date(entry.userLocalDate).toLocaleDateString())\r\n          .filter((_, index) => gratitudeHistory[index]);\r\n  \r\n        setDatesGratitude(gratitudeDates);\r\n        setHistoriqueGratitude(gratitudeHistory);\r\n  \r\n        const data = {\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: feelingsData.feelings[0],\r\n              data: historyData.map(entry => entry.feeling1),\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling1\r\n            },\r\n            {\r\n              label: feelingsData.feelings[1],\r\n              data: historyData.map(entry => entry.feeling2),\r\n              borderColor: 'rgba(153, 102, 255, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling2\r\n            },\r\n            {\r\n              label: feelingsData.feelings[2],\r\n              data: historyData.map(entry => entry.feeling3),\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling3\r\n            },\r\n            {\r\n              label: feelingsData.feelings[3],\r\n              data: historyData.map(entry => entry.feeling4),\r\n              borderColor: 'rgba(255, 206, 86, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling4\r\n            },\r\n            {\r\n              label: 'Règles',\r\n              data: feelingsData.regles?.map((regle) => (regle === true ? 0 : null)) || [],\r\n              borderColor: 'rgba(0, 0, 0, 1)',\r\n              backgroundColor: 'rgba(0, 0, 0, 1)',\r\n              borderWidth: 4,\r\n              pointRadius: 4,\r\n              pointHoverRadius: 4,\r\n              fill: true,\r\n              hidden: !showRegles\r\n            }\r\n          ],\r\n        };\r\n  \r\n        setChartData(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des données :\", error);\r\n      }\r\n    };\r\n  \r\n    fetchUserFeelingsAndHistory();\r\n  }, [showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles,timeRange]);\r\n  \r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          font: {\r\n            weight: 'bold',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Arial',\r\n            weight: 'bold',\r\n          },\r\n          boxWidth: 15,\r\n          boxHeight: 5,\r\n          padding: 20,\r\n          color: '#333',\r\n        },\r\n      },\r\n      zoom: {\r\n        pan: {\r\n          enabled: true,\r\n          mode: 'x',\r\n        },\r\n        zoom: {\r\n          wheel: {\r\n            enabled: true,\r\n          },\r\n          pinch: {\r\n            enabled: true\r\n          },\r\n          mode: 'x',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h6>Historique des Émotions</h6>\r\n\r\n        <div className=\"chart-container\">\r\n          {chartData.labels && <Line data={chartData} options={options} />}\r\n        </div>\r\n        <div className=\"time-filter\">\r\n          <button onClick={() => setTimeRange('1hour')}>1 h</button>\r\n          <button onClick={() => setTimeRange('3mois')}>3 mois</button>\r\n          <button onClick={() => setTimeRange('6hour')}>6 h</button>\r\n          <button onClick={() => setTimeRange('tout')}>Tout</button>\r\n        </div>\r\n\r\n        {/* <div className=\"checkbox-container\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling1}\r\n              onChange={() => setShowFeeling1(!showFeeling1)}\r\n            />\r\n            {feelings[0]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling2}\r\n              onChange={() => setShowFeeling2(!showFeeling2)}\r\n            />\r\n            {feelings[1]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling3}\r\n              onChange={() => setShowFeeling3(!showFeeling3)}\r\n            />\r\n            {feelings[2]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling4}\r\n              onChange={() => setShowFeeling4(!showFeeling4)}\r\n            />\r\n            {feelings[3]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showRegles}\r\n              onChange={() => setShowRegles(!showRegles)}\r\n            />\r\n            Menstruation\r\n          </label>\r\n        </div> */}\r\n        <div className=\"checkbox-container\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling1}\r\n              onChange={() => setShowFeeling1(!showFeeling1)}\r\n            />\r\n            {feelings[0]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling2}\r\n              onChange={() => setShowFeeling2(!showFeeling2)}\r\n            />\r\n            {feelings[1]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling3}\r\n              onChange={() => setShowFeeling3(!showFeeling3)}\r\n            />\r\n            {feelings[2]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling4}\r\n              onChange={() => setShowFeeling4(!showFeeling4)}\r\n            />\r\n            {feelings[3]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showRegles}\r\n              onChange={() => setShowRegles(!showRegles)}\r\n            />\r\n            Règles\r\n          </label>\r\n        </div>\r\n\r\n\r\n        <div className=\"historique-gratitude\">\r\n          <div className='h7'>Historique des mantras</div>\r\n          <div className='fenetre-gratitude'>\r\n            {historiqueGratitude.length > 0 ? (\r\n              historiqueGratitude.map((phrase, index) => (\r\n                <div key={index}>\r\n                  <p>{phrase} : (<em>{gratitudeDates[index]})</em></p>\r\n                  <hr className=\"hr-phraseGratitude\" />\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <li>Aucune phrase de gratitude disponible</li>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <Link to=\"/\">\r\n          <button type=\"button\" className=\"submit-button-history\">\r\n            Emotions\r\n          </button>\r\n        </Link>\r\n        <div className=\"button-container\">\r\n          <LogoutButton />\r\n        </div>\r\n        <p className =\"droits\">© 2025 myDay. Tous droits réservés.\r\n        Cette application et son contenu sont protégés par les lois en vigueur sur la propriété intellectuelle. </p>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Historique;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}