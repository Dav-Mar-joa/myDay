{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\850_G5\\\\Documents\\\\Formation_Dot_Net\\\\myday\\\\front-end\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/Home.css';\nimport './styles/Mobile.css';\nimport LogoutButton from './LogoutButton'; // Importer le composant LogoutButton\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet feeling1 = \"\";\nlet feeling2 = \"\";\nlet feeling3 = \"\";\nlet feeling4 = \"\";\nfunction Home() {\n  _s();\n  const [rating1, setRating1] = useState(0);\n  const [rating2, setRating2] = useState(0);\n  const [rating3, setRating3] = useState(0);\n  const [rating4, setRating4] = useState(0);\n  const [phrase, setPhrase] = useState('');\n  const [canSubmit, setCanSubmit] = useState(true); // Contrôle de la possibilité de soumettre\n  const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]);\n  const handleRatingChange = setter => newRating => setter(newRating);\n  const handlePhraseChange = event => setPhrase(event.target.value);\n  const handleClear = () => {\n    setRating1(0);\n    setRating2(0);\n    setRating3(0);\n    setRating4(0);\n    setPhrase('');\n    const checkbox = document.getElementById(\"regle\");\n    if (checkbox) {\n      checkbox.checked = false;\n    }\n  };\n\n  //   const handleSubmit = async () => {\n  //     // Cette fonction gère la soumission réelle\n  //     const userData = {\n  //       feeling1: rating1,\n  //       feeling2: rating2,\n  //       feeling3: rating3,\n  //       feeling4: rating4,\n  //       phraseGratitude: phrase,\n  //       regle: document.getElementById(\"regle\").checked\n  //     };\n\n  //     try {\n  //       const API_URL =\n  //         window.location.hostname === \"localhost\"\n  //           ? \"http://localhost:4000\"\n  //           : \"https://myday-back.onrender.com\";\n\n  //       const response = await fetch(`${API_URL}/`, {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" },\n  //         body: JSON.stringify(userData),\n  //         credentials: 'include'\n  //       });\n\n  //       const data = await response.json();\n  //       console.log(\"Réponse du serveur :\", data);\n\n  //       if (data) {\n  //         handleClear();\n  //         const currentDate = new Date();\n  //         const currentDateWithoutTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n  //         localStorage.setItem('lastSubmissionDate', currentDateWithoutTime.toISOString()); // Enregistrer la date sans l'heure\n  //         setCanSubmit(false); // Désactiver le bouton de soumission\n  //       }\n  //     } catch (error) {\n  //       console.error(\"Erreur lors de l'envoi :\", error);\n  //     }\n  //   };\n\n  const handleSubmit = async () => {\n    // Vérification des valeurs avant l'envoi\n    console.log(\"Données envoyées :\");\n    console.log({\n      feeling1: rating1,\n      feeling2: rating2,\n      feeling3: rating3,\n      feeling4: rating4,\n      phraseGratitude: phrase,\n      regle: document.getElementById(\"regle\").checked\n    });\n    const userData = {\n      feeling1: rating1,\n      feeling2: rating2,\n      feeling3: rating3,\n      feeling4: rating4,\n      phraseGratitude: phrase,\n      regle: document.getElementById(\"regle\").checked\n    };\n    try {\n      const API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:4000\" : \"https://myday-back.onrender.com\";\n\n      // Ajout d'un log pour vérifier l'URL\n      console.log(\"Envoi de la requête à l'URL : \", `${API_URL}/`);\n      const response = await fetch(`${API_URL}/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData),\n        credentials: 'include'\n      });\n      const data = await response.json();\n      console.log(\"Réponse du serveur :\", data);\n      if (data) {\n        handleClear();\n        const currentDate = new Date();\n        const currentDateWithoutTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n        localStorage.setItem('lastSubmissionDate', currentDateWithoutTime.toISOString()); // Enregistrer la date sans l'heure\n        setCanSubmit(false); // Désactiver le bouton de soumission\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'envoi :\", error);\n    }\n    const API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:4000\" : \"https://myday-back.onrender.com\";\n    const response = await fetch(`${API_URL}/user-feelings`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    });\n    console.log(\"response\", response);\n  };\n  useEffect(() => {\n    const fetchUserFeelings = async () => {\n      try {\n        const API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:4000\" : \"https://myday-back.onrender.com\";\n        const response = await fetch(`${API_URL}/user-feelings`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: 'include'\n        });\n        const dataFeelings = await response.json();\n        feeling1 = dataFeelings.feelings[0];\n        feeling2 = dataFeelings.feelings[1];\n        feeling3 = dataFeelings.feelings[2];\n        feeling4 = dataFeelings.feelings[3];\n        if (dataFeelings && dataFeelings.feelings) {\n          setFeelings(dataFeelings.feelings);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des émotions :\", error);\n      }\n    };\n    fetchUserFeelings();\n    // Vérifier si la date du jour est différente de celle enregistrée dans le localStorage\n    const lastSubmission = localStorage.getItem('lastSubmissionDate');\n    const currentDate = new Date();\n    const currentDateWithoutTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n    if (lastSubmission) {\n      const lastDate = new Date(lastSubmission);\n      if (currentDateWithoutTime > lastDate) {\n        setCanSubmit(true); // Permettre la soumission si nous sommes sur un nouveau jour\n      } else {\n        setCanSubmit(false); // Empêcher la soumission sinon\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [\" \", [{\n        title: feeling1,\n        rating: rating1,\n        setRating: handleRatingChange(setRating1)\n      }, {\n        title: feeling2,\n        rating: rating2,\n        setRating: handleRatingChange(setRating2)\n      }, {\n        title: feeling3,\n        rating: rating3,\n        setRating: handleRatingChange(setRating3)\n      }, {\n        title: feeling4,\n        rating: rating4,\n        setRating: handleRatingChange(setRating4)\n      }].map((feeling, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: feeling.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stars\",\n          children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `star ${feeling.rating >= star ? 'active' : ''}`,\n            onClick: () => feeling.setRating(star),\n            children: \"\\u2605\"\n          }, star, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mon mantra du jour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"phrase-input\",\n        placeholder: \"Ajoutez une phrase ou une r\\xE9flexion...\",\n        value: phrase,\n        id: \"phraseGratitude\",\n        onChange: handlePhraseChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"regles\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"regles\",\n          children: \"R\\xE8gles :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkBox-regles\",\n          type: \"checkbox\",\n          id: \"regle\",\n          name: \"regle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boutton-clear-submit-index\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-button-clear\",\n          onClick: handleClear,\n          children: \"Effacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          onClick: handleSubmit // Appel de la fonction handleSubmit directement\n          // disabled={!canSubmit} // Désactiver le bouton si on ne peut pas soumettre\n          ,\n          children: \"Soumettre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Historique\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-button\",\n          children: \"Historique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"kOBDQ3Yz+tGmxLVIBvWMVvpa30A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","LogoutButton","Link","jsxDEV","_jsxDEV","feeling1","feeling2","feeling3","feeling4","Home","_s","rating1","setRating1","rating2","setRating2","rating3","setRating3","rating4","setRating4","phrase","setPhrase","canSubmit","setCanSubmit","feelings","setFeelings","handleRatingChange","setter","newRating","handlePhraseChange","event","target","value","handleClear","checkbox","document","getElementById","checked","handleSubmit","console","log","phraseGratitude","regle","userData","API_URL","window","location","hostname","response","fetch","method","headers","body","JSON","stringify","credentials","data","json","currentDate","Date","currentDateWithoutTime","getFullYear","getMonth","getDate","localStorage","setItem","toISOString","error","fetchUserFeelings","dataFeelings","lastSubmission","getItem","lastDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","title","rating","setRating","map","feeling","index","star","onClick","placeholder","id","onChange","htmlFor","type","name","to","_c","$RefreshReg$"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/Home.css';\r\nimport './styles/Mobile.css';\r\nimport LogoutButton from './LogoutButton'; // Importer le composant LogoutButton\r\nimport { Link } from 'react-router-dom';\r\nlet feeling1=\"\"\r\nlet feeling2=\"\"\r\nlet feeling3=\"\"\r\nlet feeling4=\"\"\r\nfunction Home() {\r\n  const [rating1, setRating1] = useState(0);\r\n  const [rating2, setRating2] = useState(0);\r\n  const [rating3, setRating3] = useState(0);\r\n  const [rating4, setRating4] = useState(0);\r\n  const [phrase, setPhrase] = useState('');\r\n  const [canSubmit, setCanSubmit] = useState(true); // Contrôle de la possibilité de soumettre\r\n  const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]);\r\n\r\n  const handleRatingChange = (setter) => (newRating) => setter(newRating);\r\n  const handlePhraseChange = (event) => setPhrase(event.target.value);\r\n\r\n  const handleClear = () => {\r\n    setRating1(0);\r\n    setRating2(0);\r\n    setRating3(0);\r\n    setRating4(0);\r\n    setPhrase('');\r\n    const checkbox = document.getElementById(\"regle\");\r\n    if (checkbox) {\r\n      checkbox.checked = false;\r\n    }\r\n  };\r\n\r\n//   const handleSubmit = async () => {\r\n//     // Cette fonction gère la soumission réelle\r\n//     const userData = {\r\n//       feeling1: rating1,\r\n//       feeling2: rating2,\r\n//       feeling3: rating3,\r\n//       feeling4: rating4,\r\n//       phraseGratitude: phrase,\r\n//       regle: document.getElementById(\"regle\").checked\r\n//     };\r\n\r\n//     try {\r\n//       const API_URL =\r\n//         window.location.hostname === \"localhost\"\r\n//           ? \"http://localhost:4000\"\r\n//           : \"https://myday-back.onrender.com\";\r\n\r\n//       const response = await fetch(`${API_URL}/`, {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(userData),\r\n//         credentials: 'include'\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       console.log(\"Réponse du serveur :\", data);\r\n\r\n//       if (data) {\r\n//         handleClear();\r\n//         const currentDate = new Date();\r\n//         const currentDateWithoutTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n//         localStorage.setItem('lastSubmissionDate', currentDateWithoutTime.toISOString()); // Enregistrer la date sans l'heure\r\n//         setCanSubmit(false); // Désactiver le bouton de soumission\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Erreur lors de l'envoi :\", error);\r\n//     }\r\n//   };\r\n\r\nconst handleSubmit = async () => {\r\n    // Vérification des valeurs avant l'envoi\r\n    console.log(\"Données envoyées :\");\r\n    console.log({\r\n      feeling1: rating1,\r\n      feeling2: rating2,\r\n      feeling3: rating3,\r\n      feeling4: rating4,\r\n      phraseGratitude: phrase,\r\n      regle: document.getElementById(\"regle\").checked\r\n    });\r\n  \r\n    const userData = {\r\n      feeling1: rating1,\r\n      feeling2: rating2,\r\n      feeling3: rating3,\r\n      feeling4: rating4,\r\n      phraseGratitude: phrase,\r\n      regle: document.getElementById(\"regle\").checked\r\n    };\r\n  \r\n    try {\r\n      const API_URL =\r\n        window.location.hostname === \"localhost\"\r\n          ? \"http://localhost:4000\"\r\n          : \"https://myday-back.onrender.com\";\r\n  \r\n      // Ajout d'un log pour vérifier l'URL\r\n      console.log(\"Envoi de la requête à l'URL : \", `${API_URL}/`);\r\n  \r\n      const response = await fetch(`${API_URL}/`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(userData),\r\n        credentials: 'include'\r\n      });\r\n  \r\n      const data = await response.json();\r\n      console.log(\"Réponse du serveur :\", data);\r\n  \r\n      if (data) {\r\n        handleClear();\r\n        const currentDate = new Date();\r\n        const currentDateWithoutTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n        localStorage.setItem('lastSubmissionDate', currentDateWithoutTime.toISOString()); // Enregistrer la date sans l'heure\r\n        setCanSubmit(false); // Désactiver le bouton de soumission\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi :\", error);\r\n    }\r\n    const API_URL =\r\n        window.location.hostname === \"localhost\"\r\n          ? \"http://localhost:4000\"\r\n          : \"https://myday-back.onrender.com\";\r\n    const response = await fetch(`${API_URL}/user-feelings`, {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: 'include'\r\n      });\r\n\r\n      console.log(\"response\",response)\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    const fetchUserFeelings = async () => {\r\n        try {\r\n          const API_URL =\r\n            window.location.hostname === \"localhost\"\r\n              ? \"http://localhost:4000\"\r\n              : \"https://myday-back.onrender.com\";\r\n  \r\n          const response = await fetch(`${API_URL}/user-feelings`, {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            credentials: 'include'\r\n          });\r\n  \r\n          const dataFeelings = await response.json();\r\n          feeling1=dataFeelings.feelings[0]\r\n          feeling2=dataFeelings.feelings[1]\r\n          feeling3=dataFeelings.feelings[2]\r\n          feeling4=dataFeelings.feelings[3]\r\n\r\n          if (dataFeelings && dataFeelings.feelings) {\r\n            setFeelings(dataFeelings.feelings);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la récupération des émotions :\", error);\r\n        }\r\n      };\r\n  \r\n      fetchUserFeelings();\r\n    // Vérifier si la date du jour est différente de celle enregistrée dans le localStorage\r\n    const lastSubmission = localStorage.getItem('lastSubmissionDate');\r\n    const currentDate = new Date();\r\n    const currentDateWithoutTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\r\n    \r\n    if (lastSubmission) {\r\n      const lastDate = new Date(lastSubmission);\r\n      if (currentDateWithoutTime > lastDate) {\r\n        setCanSubmit(true); // Permettre la soumission si nous sommes sur un nouveau jour\r\n      } else {\r\n        setCanSubmit(false); // Empêcher la soumission sinon\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>\r\n          <span>M</span><span>y</span><span>D</span><span>a</span><span>y</span>\r\n        </h1>\r\n      </div>\r\n\r\n      <form onSubmit={(e) => e.preventDefault()}> {/* Prévenir la soumission automatique du formulaire */}\r\n        {[ \r\n          { title: feeling1, rating: rating1, setRating: handleRatingChange(setRating1) },\r\n          { title: feeling2, rating: rating2, setRating: handleRatingChange(setRating2) },\r\n          { title: feeling3, rating: rating3, setRating: handleRatingChange(setRating3) },\r\n          { title: feeling4, rating: rating4, setRating: handleRatingChange(setRating4) }\r\n        ].map((feeling, index) => (\r\n          <div key={index}>\r\n            <h2>{feeling.title}</h2>\r\n            <div className=\"stars\">\r\n              {[1, 2, 3, 4, 5].map((star) => (\r\n                <span\r\n                  key={star}\r\n                  className={`star ${feeling.rating >= star ? 'active' : ''}`}\r\n                  onClick={() => feeling.setRating(star)}\r\n                >\r\n                  &#9733;\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        <hr className=\"hr\" />\r\n        <h3>Mon mantra du jour</h3>\r\n        <textarea\r\n          className=\"phrase-input\"\r\n          placeholder=\"Ajoutez une phrase ou une réflexion...\"\r\n          value={phrase}\r\n          id=\"phraseGratitude\"\r\n          onChange={handlePhraseChange}\r\n        ></textarea>\r\n\r\n        <div className=\"regles\">\r\n          <label htmlFor=\"regles\">Règles :</label>\r\n          <input\r\n            className=\"checkBox-regles\"\r\n            type=\"checkbox\"\r\n            id=\"regle\"\r\n            name=\"regle\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"boutton-clear-submit-index\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-button-clear\"\r\n            onClick={handleClear}>\r\n            Effacer\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"submit-button\"\r\n            onClick={handleSubmit} // Appel de la fonction handleSubmit directement\r\n            // disabled={!canSubmit} // Désactiver le bouton si on ne peut pas soumettre\r\n          >\r\n            Soumettre\r\n          </button>\r\n        </div>\r\n        <hr className=\"hr\" />\r\n\r\n        <Link to=\"/Historique\">\r\n            <button type=\"button\" className=\"submit-button\">\r\n                Historique\r\n            </button>\r\n        </Link>\r\n        \r\n        {/* Utilisation du composant LogoutButton */}\r\n        <div className='button-container'>\r\n          <LogoutButton />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}