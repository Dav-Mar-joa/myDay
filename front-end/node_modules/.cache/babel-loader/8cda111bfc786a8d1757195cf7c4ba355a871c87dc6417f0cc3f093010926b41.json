{"ast":null,"code":"// Vérifie si les Service Workers sont supportés\nconst isLocalhost = Boolean(window.location.hostname === \"localhost\" || window.location.hostname === \"[::1]\" || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)){3}$/));\nexport function register() {\n  if (\"serviceWorker\" in navigator) {\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n    if (isLocalhost) {\n      checkValidServiceWorker(swUrl);\n    } else {\n      registerValidSW(swUrl);\n    }\n  }\n}\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    console.log(\"Service Worker enregistré avec succès :\", registration);\n  }).catch(error => {\n    console.error(\"Erreur d'enregistrement du Service Worker :\", error);\n  });\n}\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl).then(response => {\n    var _response$headers$get;\n    if (response.status === 404 || ((_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.indexOf(\"javascript\")) === -1) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      registerValidSW(swUrl);\n    }\n  }).catch(() => {\n    console.log(\"Pas de connexion internet. Le mode hors ligne est activé.\");\n  });\n}\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    }).catch(error => {\n      console.error(error.message);\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","swUrl","process","env","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","console","log","catch","error","fetch","response","_response$headers$get","status","headers","get","indexOf","ready","unregister","reload","message"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/src/serviceWorkerRegistration.js"],"sourcesContent":["// Vérifie si les Service Workers sont supportés\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"[::1]\" ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)){3}$/\r\n    )\r\n  );\r\n  \r\n  export function register() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        console.log(\"Service Worker enregistré avec succès :\", registration);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur d'enregistrement du Service Worker :\", error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    fetch(swUrl)\r\n      .then((response) => {\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get(\"content-type\")?.indexOf(\"javascript\") === -1\r\n        ) {\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Pas de connexion internet. Le mode hors ligne est activé.\");\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  "],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGC,OAAO,CACvBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO,IACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,yDACF,CACF,CAAC;AAED,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,IAAI,eAAe,IAAIC,SAAS,EAAE;IAChC,MAAMC,KAAK,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB;IAE3D,IAAIX,WAAW,EAAE;MACfY,uBAAuB,CAACJ,KAAK,CAAC;IAChC,CAAC,MAAM;MACLK,eAAe,CAACL,KAAK,CAAC;IACxB;EACF;AACF;AAEA,SAASK,eAAeA,CAACL,KAAK,EAAE;EAC9BD,SAAS,CAACO,aAAa,CACpBR,QAAQ,CAACE,KAAK,CAAC,CACfO,IAAI,CAAEC,YAAY,IAAK;IACtBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,YAAY,CAAC;EACtE,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;EACrE,CAAC,CAAC;AACN;AAEA,SAASR,uBAAuBA,CAACJ,KAAK,EAAE;EACtCa,KAAK,CAACb,KAAK,CAAC,CACTO,IAAI,CAAEO,QAAQ,IAAK;IAAA,IAAAC,qBAAA;IAClB,IACED,QAAQ,CAACE,MAAM,KAAK,GAAG,IACvB,EAAAD,qBAAA,GAAAD,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,cAAAH,qBAAA,uBAApCA,qBAAA,CAAsCI,OAAO,CAAC,YAAY,CAAC,MAAK,CAAC,CAAC,EAClE;MACApB,SAAS,CAACO,aAAa,CAACc,KAAK,CAACb,IAAI,CAAEC,YAAY,IAAK;QACnDA,YAAY,CAACa,UAAU,CAAC,CAAC,CAACd,IAAI,CAAC,MAAM;UACnCb,MAAM,CAACC,QAAQ,CAAC2B,MAAM,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,MAAM;MACLjB,eAAe,CAACL,KAAK,CAAC;IACxB;EACF,CAAC,CAAC,CACDW,KAAK,CAAC,MAAM;IACXF,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;EAC1E,CAAC,CAAC;AACN;AAEA,OAAO,SAASW,UAAUA,CAAA,EAAG;EAC3B,IAAI,eAAe,IAAItB,SAAS,EAAE;IAChCA,SAAS,CAACO,aAAa,CAACc,KAAK,CAC1Bb,IAAI,CAAEC,YAAY,IAAK;MACtBA,YAAY,CAACa,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDV,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAACW,OAAO,CAAC;IAC9B,CAAC,CAAC;EACN;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}