{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\850_G5\\\\Documents\\\\Formation_Dot_Net\\\\myday\\\\front-end\\\\src\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles/Home.css';\nimport './styles/Mobile.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [feelings, setFeelings] = useState([]);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [modifiedFeelings, setModifiedFeelings] = useState({});\n  const [selectedOption, setSelectedOption] = useState(''); // Ajouté pour gérer le thème\n  const [pseudo, setPseudo] = useState(\"\");\n  const handleSelectionChange = e => {\n    console.log(\"1\");\n    const newTheme = e.target.value;\n    setSelectedOption(newTheme);\n    document.body.className = newTheme;\n    console.log(\"theme !!!!! \", newTheme);\n    // const pseudo = localStorage.getItem('username',\"qs\");\n    // const pseudo = \"aa\";\n    console.log(\"localStorage avant /setTheme!!!!! \", localStorage);\n    if (pseudo) {\n      fetch('/setTheme', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pseudo,\n          theme: newTheme\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"set theme data\", data);\n        if (!data.success) {\n          console.error(\"Échec de l'enregistrement du thème.\");\n        }\n      }).catch(err => console.error(\"Erreur en envoyant le thème :\", err));\n    }\n  };\n  useEffect(() => {\n    fetch('/getFeelings').then(res => res.json()).then(data => {\n      setFeelings(data.feelings);\n      // setPseudo(data.pseudo);\n      console.log(\"2\");\n      console.log(\"--------------->>>>>> >>>>>>>>>> -------------\");\n      const donnees = data;\n      console.log(\"data :\", donnees);\n      const pseudo2 = data.pseudo; // Récupérer le pseudo depuis les données\n      console.log(\"pseudo récupéré depuis /getFeelings :\", pseudo2);\n      console.log(\"--------------->>>>>> >>>>>>>>>> -------------\");\n      setPseudo(pseudo2);\n    }).catch(err => console.error(\"Erreur en récupérant les émotions :\", err));\n\n    // Charger le thème depuis la base\n    // const pseudo = localStorage.getItem('username');\n    // const pseudo = 'aa';\n    console.log(\"localStorage avant /getTheme!!!!! \", localStorage);\n    if (pseudo) {\n      fetch('/getTheme', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pseudo\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success && data.theme) {\n          setSelectedOption(data.theme);\n          document.body.className = data.theme;\n        }\n      }).catch(err => console.error(\"Erreur en récupérant le thème :\", err));\n    }\n  }, []);\n  useEffect(() => {\n    if (pseudo) {\n      fetch('/getTheme', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pseudo\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success && data.theme) {\n          setSelectedOption(data.theme);\n          document.body.className = data.theme;\n        }\n      }).catch(err => console.error(\"Erreur en récupérant le thème :\", err));\n    }\n  }, [pseudo]); // Se déclenche uniquement quand pseudo est défini\n\n  const handleInputChange = (index, value) => {\n    setModifiedFeelings(prev => ({\n      ...prev,\n      [index]: value\n    }));\n  };\n\n  // const updateFeeling = (index) => {\n  //     const newFeeling = modifiedFeelings[index];\n  //     if (!newFeeling) return;\n\n  //     fetch('/updateFeeling', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify({ index, newFeeling })\n  //     })\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         if (data.success) {\n  //             const updatedFeelings = [...feelings];\n  //             updatedFeelings[index] = newFeeling;\n  //             setFeelings(updatedFeelings);\n  //             setEditingIndex(null);\n  //             setModifiedFeelings({});\n  //         } else {\n  //             console.error(\"Erreur côté serveur :\", data.message);\n  //         }\n  //     })\n  //     .catch(err => console.error(\"Erreur en mettant à jour :\", err));\n  // };\n  const updateFeeling = index => {\n    const newFeeling = modifiedFeelings[index];\n    if (!newFeeling) return;\n    fetch('/updateFeeling', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        index,\n        newFeeling\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        const updatedFeelings = [...feelings];\n        console.log(\"updatedFeelings : \", updatedFeelings);\n        updatedFeelings[index] = newFeeling;\n        console.log(\"updatedFeelings [index] : \", updatedFeelings[index]);\n        setFeelings(updatedFeelings); // met à jour l'affichage\n        setEditingIndex(null); // quitte le mode édition\n        setModifiedFeelings(prev => {\n          const updated = {\n            ...prev\n          };\n          console.log(\"upadated : \", updated);\n          delete updated[index];\n          const del = delete updated[index];\n          console.log(\"del : \", del); // nettoie le champ modifié\n          return updated;\n        });\n      } else {\n        console.error(\"Erreur côté serveur :\", data.message);\n      }\n    }).catch(err => console.error(\"Erreur en mettant à jour :\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 77\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Theme : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"theme-select\",\n      className: \"theme-select\",\n      value: selectedOption,\n      onChange: handleSelectionChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"colorful\",\n        children: \"Printemps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ocean\",\n        children: \"Oc\\xE9an\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"dark\",\n        children: \"Sombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Emotions :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: feelings.map((f, index) => {\n        var _modifiedFeelings$ind;\n        return /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [editingIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inputFeelingsSettings\",\n              type: \"text\",\n              value: (_modifiedFeelings$ind = modifiedFeelings[index]) !== null && _modifiedFeelings$ind !== void 0 ? _modifiedFeelings$ind : f,\n              onChange: e => handleInputChange(index, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-option\",\n              onClick: () => updateFeeling(index),\n              children: \"\\u2714\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-option\",\n              onClick: () => {\n                setEditingIndex(null);\n                setModifiedFeelings(prev => {\n                  const updated = {\n                    ...prev\n                  };\n                  delete updated[index];\n                  return updated;\n                });\n              },\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [f, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-option\",\n              onClick: () => setEditingIndex(index),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), index < feelings.length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"hr-settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 57\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/EmotionsSettings\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submit-button\",\n        children: \"Roue des \\xE9motions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submit-button\",\n        children: \"Mes \\xE9motions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"droits\",\n      children: \"\\xA9 2025 myDay. Tous droits r\\xE9serv\\xE9s. Cette application, ainsi que l\\u2019ensemble de son contenu, est prot\\xE9g\\xE9e par les lois en vigueur relatives \\xE0 la propri\\xE9t\\xE9 intellectuelle. Les donn\\xE9es qu\\u2019elle contient sont chiffr\\xE9es afin d\\u2019en garantir la s\\xE9curit\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n_s(Settings, \"wY5oUIoZaxl1u3jKaxsBbZZjL38=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Settings","_s","feelings","setFeelings","editingIndex","setEditingIndex","modifiedFeelings","setModifiedFeelings","selectedOption","setSelectedOption","pseudo","setPseudo","handleSelectionChange","e","console","log","newTheme","target","value","document","body","className","localStorage","fetch","method","headers","JSON","stringify","theme","then","res","json","data","success","error","catch","err","donnees","pseudo2","handleInputChange","index","prev","updateFeeling","newFeeling","updatedFeelings","updated","del","message","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","f","_modifiedFeelings$ind","type","onClick","length","to","_c","$RefreshReg$"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Settings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './styles/Home.css';\r\nimport './styles/Mobile.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Settings() {\r\n    const [feelings, setFeelings] = useState([]);\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n    const [modifiedFeelings, setModifiedFeelings] = useState({});\r\n    const [selectedOption, setSelectedOption] = useState(''); // Ajouté pour gérer le thème\r\n    const [pseudo, setPseudo] = useState(\"\");\r\n\r\n    const handleSelectionChange = (e) => {\r\n        console.log(\"1\")\r\n        const newTheme = e.target.value;\r\n        setSelectedOption(newTheme);\r\n        document.body.className = newTheme;\r\n        console.log(\"theme !!!!! \", newTheme)\r\n        // const pseudo = localStorage.getItem('username',\"qs\");\r\n        // const pseudo = \"aa\";\r\n        console.log(\"localStorage avant /setTheme!!!!! \", localStorage )\r\n        \r\n        if (pseudo) {\r\n            fetch('/setTheme', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ pseudo, theme: newTheme }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(\"set theme data\",data)\r\n                if (!data.success) {\r\n                    console.error(\"Échec de l'enregistrement du thème.\");\r\n                }\r\n            })\r\n            .catch(err => console.error(\"Erreur en envoyant le thème :\", err));\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        fetch('/getFeelings')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setFeelings(data.feelings)\r\n            // setPseudo(data.pseudo);\r\n            console.log(\"2\")\r\n            console.log(\"--------------->>>>>> >>>>>>>>>> -------------\")\r\n            const donnees = data\r\n            console.log(\"data :\", donnees);\r\n            const pseudo2 = data.pseudo;  // Récupérer le pseudo depuis les données\r\n            console.log(\"pseudo récupéré depuis /getFeelings :\", pseudo2);\r\n            console.log(\"--------------->>>>>> >>>>>>>>>> -------------\")\r\n            setPseudo(pseudo2);\r\n        })\r\n        .catch(err => console.error(\"Erreur en récupérant les émotions :\", err));\r\n\r\n    // Charger le thème depuis la base\r\n    // const pseudo = localStorage.getItem('username');\r\n    // const pseudo = 'aa';\r\n    console.log(\"localStorage avant /getTheme!!!!! \", localStorage)\r\n    if (pseudo) {\r\n        fetch('/getTheme', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ pseudo })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success && data.theme) {\r\n                setSelectedOption(data.theme);\r\n                document.body.className = data.theme;\r\n            }\r\n        })\r\n     \r\n        .catch(err => console.error(\"Erreur en récupérant le thème :\", err));\r\n    }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (pseudo) {\r\n            fetch('/getTheme', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ pseudo })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.success && data.theme) {\r\n                    setSelectedOption(data.theme);\r\n                    document.body.className = data.theme;\r\n                }\r\n            })\r\n            .catch(err => console.error(\"Erreur en récupérant le thème :\", err));\r\n        }\r\n    }, [pseudo]); // Se déclenche uniquement quand pseudo est défini\r\n    \r\n\r\n    const handleInputChange = (index, value) => {\r\n        setModifiedFeelings(prev => ({\r\n            ...prev,\r\n            [index]: value\r\n        }));\r\n    };\r\n\r\n\r\n    // const updateFeeling = (index) => {\r\n    //     const newFeeling = modifiedFeelings[index];\r\n    //     if (!newFeeling) return;\r\n\r\n    //     fetch('/updateFeeling', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({ index, newFeeling })\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(data => {\r\n    //         if (data.success) {\r\n    //             const updatedFeelings = [...feelings];\r\n    //             updatedFeelings[index] = newFeeling;\r\n    //             setFeelings(updatedFeelings);\r\n    //             setEditingIndex(null);\r\n    //             setModifiedFeelings({});\r\n    //         } else {\r\n    //             console.error(\"Erreur côté serveur :\", data.message);\r\n    //         }\r\n    //     })\r\n    //     .catch(err => console.error(\"Erreur en mettant à jour :\", err));\r\n    // };\r\n    const updateFeeling = (index) => {\r\n        const newFeeling = modifiedFeelings[index];\r\n        if (!newFeeling) return;\r\n    \r\n        fetch('/updateFeeling', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ index, newFeeling })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                const updatedFeelings = [...feelings];\r\n                console.log(\"updatedFeelings : \",updatedFeelings)\r\n                updatedFeelings[index] = newFeeling;\r\n                console.log(\"updatedFeelings [index] : \",updatedFeelings[index])\r\n                setFeelings(updatedFeelings);           // met à jour l'affichage\r\n                setEditingIndex(null);                  // quitte le mode édition\r\n                setModifiedFeelings(prev => {\r\n                    const updated = { ...prev };\r\n                    console.log(\"upadated : \",updated)\r\n                    delete updated[index]; \r\n                    const del = delete updated[index];\r\n                    console.log(\"del : \",del)             // nettoie le champ modifié\r\n                    return updated;\r\n                });\r\n            } else {\r\n                console.error(\"Erreur côté serveur :\", data.message);\r\n            }\r\n        })\r\n        .catch(err => console.error(\"Erreur en mettant à jour :\", err));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <h1>\r\n                    <span>m</span><span>y</span><span>D</span><span>a</span><span>y</span>\r\n                </h1>\r\n            </div>\r\n            \r\n            <h5>Theme : </h5>\r\n            {/* <select id=\"theme-select\" class=\"theme-select\">\r\n            <option value=\"colorful\">Coloré</option>\r\n            <option value=\"dark\">not dev</option>\r\n            </select> */}\r\n\r\n            <select id=\"theme-select\" className=\"theme-select\" value={selectedOption} onChange={handleSelectionChange}>\r\n                <option value=\"colorful\">Printemps</option>\r\n                <option value=\"ocean\">Océan</option>\r\n                <option value=\"dark\">Sombre</option>\r\n            </select>\r\n\r\n            <h5>Emotions :</h5>\r\n            <ol>\r\n                {/* {feelings.map((f, index) => (\r\n                    <ol key={index}>\r\n                        {editingIndex === index ? (\r\n                            <>\r\n                                <input\r\n                                    className='inputFeelingsSettings'\r\n                                    type=\"text\"\r\n                                    defaultValue={f}\r\n                                    onChange={(e) => handleInputChange(index, e.target.value)}\r\n                                />\r\n                                \r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => {updateFeeling(index)\r\n                                                    index=false\r\n                                    }\r\n                                    \r\n                                    }>✔️</button>\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => {setEditingIndex(null)\r\n                                                    index=false}\r\n                                    }>❌</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {f}\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => setEditingIndex(index)}>✏️</button>\r\n                            </>\r\n                        )}\r\n                         {index < feelings.length - 1 && <hr className=\"hr-settings\" />}\r\n                    </ol>\r\n                    \r\n                ))} */}\r\n                {feelings.map((f, index) => (\r\n                    <ol key={index}>\r\n                        {editingIndex === index ? (\r\n                            <>\r\n                                <input\r\n                                    className='inputFeelingsSettings'\r\n                                    type=\"text\"\r\n                                    value={modifiedFeelings[index] ?? f}\r\n                                    onChange={(e) => handleInputChange(index, e.target.value)}\r\n                                />\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => updateFeeling(index)}\r\n                                >✔️</button>\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => {\r\n                                        setEditingIndex(null);\r\n                                        setModifiedFeelings(prev => {\r\n                                            const updated = { ...prev };\r\n                                            delete updated[index];\r\n                                            return updated;\r\n                                        });\r\n                                    }}\r\n                                >❌</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {f}\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => setEditingIndex(index)}\r\n                                >✏️</button>\r\n                            </>\r\n                        )}\r\n                        {index < feelings.length - 1 && <hr className=\"hr-settings\" />}\r\n                    </ol>\r\n                ))}\r\n\r\n            </ol>\r\n\r\n            <Link to=\"/EmotionsSettings\">\r\n                <button type=\"button\" className=\"submit-button\">Roue des émotions</button>\r\n            </Link>\r\n\r\n            <hr className=\"hr\" />\r\n\r\n            <Link to=\"/\">\r\n                <button type=\"button\" className=\"submit-button\">Mes émotions</button>\r\n            </Link>\r\n\r\n           \r\n\r\n            <p className=\"droits\">\r\n                © 2025 myDay. Tous droits réservés. Cette application, ainsi que l’ensemble de son contenu, est protégée par les lois en vigueur relatives à la propriété intellectuelle. Les données qu’elle contient sont chiffrées afin d’en garantir la sécurité.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}