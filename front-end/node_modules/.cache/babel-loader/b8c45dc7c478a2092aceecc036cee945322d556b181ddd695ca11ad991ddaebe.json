{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\850_G5\\\\Documents\\\\Formation_Dot_Net\\\\myday\\\\front-end\\\\src\\\\Historique.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport LogoutButton from './LogoutButton'; // Importer le composant LogoutButton\nimport { Link } from 'react-router-dom';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(zoomPlugin);\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Historique = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]);\n  const [phraseGratitude, setPhraseGratitude] = useState(\"\");\n  const [historiqueGratitude, setHistoriqueGratitude] = useState([]);\n  const [gratitudeDates, setDatesGratitude] = useState([]);\n  const [reglesDates, setReglesDates] = useState([]);\n  const [showFeeling1, setShowFeeling1] = useState(true);\n  const [showFeeling2, setShowFeeling2] = useState(true);\n  const [showFeeling3, setShowFeeling3] = useState(true);\n  const [showFeeling4, setShowFeeling4] = useState(true);\n  const [showRegles, setShowRegles] = useState(true);\n  const [timeRange, setTimeRange] = useState('3mois');\n  const filtrerDonneesParTemps = (data, range) => {\n    const maintenant = new Date();\n    let limite;\n    switch (range) {\n      case '1semaine':\n        limite = new Date(maintenant.setDate(maintenant.getDate() - 7));\n        break;\n      case '1mois':\n        // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 1));\n        limite = new Date(maintenant.setMonth(maintenant.getMonth() - 1));\n        break;\n      case '3mois':\n        // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\n        limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\n        break;\n      case '6hour':\n        // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 6));\n        limite = new Date(maintenant.setMonth(maintenant.getMonth() - 6));\n        break;\n      default:\n        return data;\n    }\n    return data.filter(entry => new Date(entry.userLocalDate) >= limite);\n  };\n\n  // useEffect(() => {\n  //   const fetchUserFeelingsAndHistory = async () => {\n  //     try {\n  //       const API_URL =\n  //         window.location.hostname === \"localhost\"\n  //           ? \"http://localhost:4000\"\n  //           : \"https://myday-back.onrender.com\";\n\n  //       const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\n  //         method: \"GET\",\n  //         headers: { \"Content-Type\": \"application/json\" },\n  //         credentials: 'include'\n  //       });\n\n  //       const feelingsData = await feelingsResponse.json();\n  //       if (feelingsData && feelingsData.feelings) {\n  //         setFeelings(feelingsData.feelings);\n  //         setPhraseGratitude(feelingsData.phraseGratitude || []);\n  //         setReglesDates(feelingsData.regles || []);\n  //       }\n\n  //       const historyResponse = await axios.get(`${API_URL}/user-history`, {\n  //         withCredentials: true,\n  //       });\n\n  //       const historyData = historyResponse.data;\n  //       historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\n\n  //       const labels = historyData.map(entry => {\n  //         const date = new Date(entry.userLocalDate);\n  //         return date.toLocaleDateString('fr-FR', {\n  //           day: '2-digit',\n  //           month: 'short',\n  //         });\n  //       });\n\n  //       const gratitudeHistory = historyData\n  //         .map(entry => entry.phraseGratitude)\n  //         .filter(phrase => phrase && phrase.trim() !== \"\");\n\n  //       const gratitudeDates = historyData\n  //         .map(entry => new Date(entry.userLocalDate).toLocaleDateString())\n  //         .filter((_, index) => gratitudeHistory[index]);\n\n  //       setDatesGratitude(gratitudeDates);\n  //       setHistoriqueGratitude(gratitudeHistory);\n\n  //       const data = {\n  //         labels,\n  //         datasets: [\n  //           {\n  //             label: feelings[0],\n  //             data: historyData.map(entry => entry.feeling1),\n  //             borderColor: 'rgba(75, 192, 192, 1)',\n  //             borderWidth: 2,\n  //             pointRadius: 1,\n  //             pointHoverRadius: 4,\n  //             fill: false,\n  //             hidden: !showFeeling1\n  //           },\n  //           {\n  //             label: feelings[1],\n  //             data: historyData.map(entry => entry.feeling2),\n  //             borderColor: 'rgba(153, 102, 255, 1)',\n  //             borderWidth: 2,\n  //             pointRadius: 1,\n  //             pointHoverRadius: 4,\n  //             fill: false,\n  //             hidden: !showFeeling2\n  //           },\n  //           {\n  //             label: feelings[2],\n  //             data: historyData.map(entry => entry.feeling3),\n  //             borderColor: 'rgba(255, 99, 132, 1)',\n  //             borderWidth: 2,\n  //             pointRadius: 1,\n  //             pointHoverRadius: 4,\n  //             fill: false,\n  //             hidden: !showFeeling3\n  //           },\n  //           {\n  //             label: feelings[3],\n  //             data: historyData.map(entry => entry.feeling4),\n  //             borderColor: 'rgba(255, 206, 86, 1)',\n  //             borderWidth: 2,\n  //             pointRadius: 1,\n  //             pointHoverRadius: 4,\n  //             fill: false,\n  //             hidden: !showFeeling4\n  //           },\n  //           {\n  //             label: 'Règles',\n  //             data: reglesDates.map((regle, index) => {\n  //               return regle === true ? 0 : null;\n  //             }),\n  //             borderColor: 'rgba(0, 0, 0, 1)',\n  //             backgroundColor: 'rgba(0, 0, 0, 1)',\n  //             borderWidth: 4,\n  //             pointRadius: 4,\n  //             pointHoverRadius: 4,\n  //             fill: true,\n  //             hidden: !showRegles\n  //           }\n  //         ],\n  //       };\n\n  //       setChartData(data);\n  //     } catch (error) {\n  //       console.error(\"Erreur lors de la récupération des données :\", error);\n  //     }\n  //   };\n\n  //   fetchUserFeelingsAndHistory();\n  // }, [feelings, reglesDates, showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles]);\n\n  useEffect(() => {\n    const fetchUserFeelingsAndHistory = async () => {\n      try {\n        var _feelingsData$regles;\n        const API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:4000\" : \"https://myday-back.onrender.com\";\n        const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: 'include'\n        });\n        const feelingsData = await feelingsResponse.json();\n        if (feelingsData && feelingsData.feelings) {\n          // Ne relance pas setFeelings inutilement si les valeurs sont déjà identiques\n          setFeelings(prev => JSON.stringify(prev) !== JSON.stringify(feelingsData.feelings) ? feelingsData.feelings : prev);\n          setPhraseGratitude(feelingsData.phraseGratitude || []);\n          setReglesDates(feelingsData.regles || []);\n        }\n        const historyResponse = await axios.get(`${API_URL}/user-history`, {\n          withCredentials: true\n        });\n        const historyData = historyResponse.data;\n        historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\n        const filteredHistory = filtrerDonneesParTemps(historyData, timeRange);\n        const labels = filteredHistory.map(entry => {\n          const date = new Date(entry.userLocalDate);\n          return date.toLocaleDateString('fr-FR', {\n            day: '2-digit',\n            month: 'short'\n          });\n        });\n        const gratitudeHistory = historyData.map(entry => entry.phraseGratitude).filter(phrase => phrase && phrase.trim() !== \"\");\n        const gratitudeDates = historyData.map(entry => new Date(entry.userLocalDate).toLocaleDateString()).filter((_, index) => gratitudeHistory[index]);\n        setDatesGratitude(gratitudeDates);\n        setHistoriqueGratitude(gratitudeHistory);\n        const data = {\n          labels,\n          datasets: [{\n            label: feelingsData.feelings[0],\n            data: historyData.map(entry => entry.feeling1),\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n            pointRadius: 1,\n            pointHoverRadius: 4,\n            fill: false,\n            hidden: !showFeeling1\n          }, {\n            label: feelingsData.feelings[1],\n            data: historyData.map(entry => entry.feeling2),\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 2,\n            pointRadius: 1,\n            pointHoverRadius: 4,\n            fill: false,\n            hidden: !showFeeling2\n          }, {\n            label: feelingsData.feelings[2],\n            data: historyData.map(entry => entry.feeling3),\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2,\n            pointRadius: 1,\n            pointHoverRadius: 4,\n            fill: false,\n            hidden: !showFeeling3\n          }, {\n            label: feelingsData.feelings[3],\n            data: historyData.map(entry => entry.feeling4),\n            borderColor: 'rgba(255, 206, 86, 1)',\n            borderWidth: 2,\n            pointRadius: 1,\n            pointHoverRadius: 4,\n            fill: false,\n            hidden: !showFeeling4\n          }, {\n            label: 'Règles',\n            data: ((_feelingsData$regles = feelingsData.regles) === null || _feelingsData$regles === void 0 ? void 0 : _feelingsData$regles.map(regle => regle === true ? 0 : null)) || [],\n            borderColor: 'rgba(0, 0, 0, 1)',\n            backgroundColor: 'rgba(0, 0, 0, 1)',\n            borderWidth: 4,\n            pointRadius: 4,\n            pointHoverRadius: 4,\n            fill: true,\n            hidden: !showRegles\n          }]\n        };\n        setChartData(data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données :\", error);\n      }\n    };\n    fetchUserFeelingsAndHistory();\n  }, [showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles, timeRange]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        ticks: {\n          font: {\n            weight: 'bold'\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Arial',\n            weight: 'bold'\n          },\n          boxWidth: 15,\n          boxHeight: 5,\n          padding: 20,\n          color: '#333'\n        }\n      },\n      zoom: {\n        pan: {\n          enabled: true,\n          mode: 'x'\n        },\n        zoom: {\n          wheel: {\n            enabled: true\n          },\n          pinch: {\n            enabled: true\n          },\n          mode: 'x'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Historique des \\xC9motions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: chartData.labels && /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTimeRange('1semaine'),\n          children: \"1 semaine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTimeRange('1hour'),\n          children: \"1 mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTimeRange('3mois'),\n          children: \"3 mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTimeRange('6hour'),\n          children: \"6 mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTimeRange('tout'),\n          children: \"Tout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showFeeling1,\n            onChange: () => setShowFeeling1(!showFeeling1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), feelings[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showFeeling2,\n            onChange: () => setShowFeeling2(!showFeeling2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), feelings[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showFeeling3,\n            onChange: () => setShowFeeling3(!showFeeling3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), feelings[2]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showFeeling4,\n            onChange: () => setShowFeeling4(!showFeeling4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), feelings[3]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showRegles,\n            onChange: () => setShowRegles(!showRegles)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), \"R\\xE8gles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"historique-gratitude\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h7\",\n          children: \"Historique des mantras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fenetre-gratitude\",\n          children: historiqueGratitude.length > 0 ? historiqueGratitude.map((phrase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [phrase, \" : (\", /*#__PURE__*/_jsxDEV(\"em\", {\n                children: [gratitudeDates[index], \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"hr-phraseGratitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Aucune phrase de gratitude disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-button-history\",\n          children: \"Emotions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"droits\",\n        children: \"\\xA9 2025 myDay. Tous droits r\\xE9serv\\xE9s. Cette application et son contenu sont prot\\xE9g\\xE9s par les lois en vigueur sur la propri\\xE9t\\xE9 intellectuelle. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s(Historique, \"HI9FQVP8xvEipjc4Yo0f94ShRKM=\");\n_c = Historique;\nexport default Historique;\nvar _c;\n$RefreshReg$(_c, \"Historique\");","map":{"version":3,"names":["React","useState","useEffect","Line","axios","LogoutButton","Link","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","zoomPlugin","jsxDEV","_jsxDEV","register","Historique","_s","chartData","setChartData","feelings","setFeelings","phraseGratitude","setPhraseGratitude","historiqueGratitude","setHistoriqueGratitude","gratitudeDates","setDatesGratitude","reglesDates","setReglesDates","showFeeling1","setShowFeeling1","showFeeling2","setShowFeeling2","showFeeling3","setShowFeeling3","showFeeling4","setShowFeeling4","showRegles","setShowRegles","timeRange","setTimeRange","filtrerDonneesParTemps","data","range","maintenant","Date","limite","setDate","getDate","setMonth","getMonth","filter","entry","userLocalDate","fetchUserFeelingsAndHistory","_feelingsData$regles","API_URL","window","location","hostname","feelingsResponse","fetch","method","headers","credentials","feelingsData","json","prev","JSON","stringify","regles","historyResponse","get","withCredentials","historyData","sort","a","b","filteredHistory","labels","map","date","toLocaleDateString","day","month","gratitudeHistory","phrase","trim","_","index","datasets","label","feeling1","borderColor","borderWidth","pointRadius","pointHoverRadius","fill","hidden","feeling2","feeling3","feeling4","regle","backgroundColor","error","console","options","responsive","maintainAspectRatio","scales","x","ticks","font","weight","plugins","legend","display","position","size","family","boxWidth","boxHeight","padding","color","zoom","pan","enabled","mode","wheel","pinch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","onChange","length","to","_c","$RefreshReg$"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Historique.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport LogoutButton from './LogoutButton'; // Importer le composant LogoutButton\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport zoomPlugin from 'chartjs-plugin-zoom';\r\nChartJS.register(zoomPlugin);\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Historique = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [phraseGratitude, setPhraseGratitude] = useState(\"\");\r\n  const [historiqueGratitude, setHistoriqueGratitude] = useState([]);\r\n  const [gratitudeDates, setDatesGratitude] = useState([]);\r\n  const [reglesDates, setReglesDates] = useState([]);\r\n  \r\n  const [showFeeling1, setShowFeeling1] = useState(true);\r\n  const [showFeeling2, setShowFeeling2] = useState(true);\r\n  const [showFeeling3, setShowFeeling3] = useState(true);\r\n  const [showFeeling4, setShowFeeling4] = useState(true);\r\n  const [showRegles, setShowRegles] = useState(true);\r\n\r\n  const [timeRange, setTimeRange] = useState('3mois');\r\n\r\nconst filtrerDonneesParTemps = (data, range) => {\r\n  const maintenant = new Date();\r\n  let limite;\r\n\r\n  switch (range) {\r\n    case '1semaine':\r\n      limite = new Date(maintenant.setDate(maintenant.getDate() - 7));\r\n      break;\r\n    case '1mois':\r\n      // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 1));\r\n      limite = new Date(maintenant.setMonth(maintenant.getMonth() - 1));\r\n      break;\r\n    case '3mois':\r\n      // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\r\n      limite = new Date(maintenant.setMonth(maintenant.getMonth() - 3));\r\n      break;\r\n    case '6hour':\r\n      // limite = new Date(maintenant.setMonth(maintenant.getMonth() - 6));\r\n      limite = new Date(maintenant.setMonth(maintenant.getMonth() - 6));\r\n      break;\r\n    default:\r\n      return data;\r\n  }\r\n\r\n  return data.filter(entry => new Date(entry.userLocalDate) >= limite);\r\n};\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const fetchUserFeelingsAndHistory = async () => {\r\n  //     try {\r\n  //       const API_URL =\r\n  //         window.location.hostname === \"localhost\"\r\n  //           ? \"http://localhost:4000\"\r\n  //           : \"https://myday-back.onrender.com\";\r\n\r\n  //       const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\r\n  //         method: \"GET\",\r\n  //         headers: { \"Content-Type\": \"application/json\" },\r\n  //         credentials: 'include'\r\n  //       });\r\n\r\n  //       const feelingsData = await feelingsResponse.json();\r\n  //       if (feelingsData && feelingsData.feelings) {\r\n  //         setFeelings(feelingsData.feelings);\r\n  //         setPhraseGratitude(feelingsData.phraseGratitude || []);\r\n  //         setReglesDates(feelingsData.regles || []);\r\n  //       }\r\n\r\n  //       const historyResponse = await axios.get(`${API_URL}/user-history`, {\r\n  //         withCredentials: true,\r\n  //       });\r\n\r\n  //       const historyData = historyResponse.data;\r\n  //       historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\r\n\r\n  //       const labels = historyData.map(entry => {\r\n  //         const date = new Date(entry.userLocalDate);\r\n  //         return date.toLocaleDateString('fr-FR', {\r\n  //           day: '2-digit',\r\n  //           month: 'short',\r\n  //         });\r\n  //       });\r\n\r\n  //       const gratitudeHistory = historyData\r\n  //         .map(entry => entry.phraseGratitude)\r\n  //         .filter(phrase => phrase && phrase.trim() !== \"\");\r\n\r\n  //       const gratitudeDates = historyData\r\n  //         .map(entry => new Date(entry.userLocalDate).toLocaleDateString())\r\n  //         .filter((_, index) => gratitudeHistory[index]);\r\n\r\n  //       setDatesGratitude(gratitudeDates);\r\n  //       setHistoriqueGratitude(gratitudeHistory);\r\n\r\n  //       const data = {\r\n  //         labels,\r\n  //         datasets: [\r\n  //           {\r\n  //             label: feelings[0],\r\n  //             data: historyData.map(entry => entry.feeling1),\r\n  //             borderColor: 'rgba(75, 192, 192, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling1\r\n  //           },\r\n  //           {\r\n  //             label: feelings[1],\r\n  //             data: historyData.map(entry => entry.feeling2),\r\n  //             borderColor: 'rgba(153, 102, 255, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling2\r\n  //           },\r\n  //           {\r\n  //             label: feelings[2],\r\n  //             data: historyData.map(entry => entry.feeling3),\r\n  //             borderColor: 'rgba(255, 99, 132, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling3\r\n  //           },\r\n  //           {\r\n  //             label: feelings[3],\r\n  //             data: historyData.map(entry => entry.feeling4),\r\n  //             borderColor: 'rgba(255, 206, 86, 1)',\r\n  //             borderWidth: 2,\r\n  //             pointRadius: 1,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: false,\r\n  //             hidden: !showFeeling4\r\n  //           },\r\n  //           {\r\n  //             label: 'Règles',\r\n  //             data: reglesDates.map((regle, index) => {\r\n  //               return regle === true ? 0 : null;\r\n  //             }),\r\n  //             borderColor: 'rgba(0, 0, 0, 1)',\r\n  //             backgroundColor: 'rgba(0, 0, 0, 1)',\r\n  //             borderWidth: 4,\r\n  //             pointRadius: 4,\r\n  //             pointHoverRadius: 4,\r\n  //             fill: true,\r\n  //             hidden: !showRegles\r\n  //           }\r\n  //         ],\r\n  //       };\r\n\r\n  //       setChartData(data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Erreur lors de la récupération des données :\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchUserFeelingsAndHistory();\r\n  // }, [feelings, reglesDates, showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserFeelingsAndHistory = async () => {\r\n      try {\r\n        const API_URL =\r\n          window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:4000\"\r\n            : \"https://myday-back.onrender.com\";\r\n  \r\n        const feelingsResponse = await fetch(`${API_URL}/user-feelings`, {\r\n          method: \"GET\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          credentials: 'include'\r\n        });\r\n  \r\n        const feelingsData = await feelingsResponse.json();\r\n        if (feelingsData && feelingsData.feelings) {\r\n          // Ne relance pas setFeelings inutilement si les valeurs sont déjà identiques\r\n          setFeelings(prev => JSON.stringify(prev) !== JSON.stringify(feelingsData.feelings) ? feelingsData.feelings : prev);\r\n          setPhraseGratitude(feelingsData.phraseGratitude || []);\r\n          setReglesDates(feelingsData.regles || []);\r\n        }\r\n  \r\n        const historyResponse = await axios.get(`${API_URL}/user-history`, {\r\n          withCredentials: true,\r\n        });\r\n  \r\n        const historyData = historyResponse.data;\r\n        historyData.sort((a, b) => new Date(a.userLocalDate) - new Date(b.userLocalDate));\r\n        const filteredHistory = filtrerDonneesParTemps(historyData, timeRange);\r\n        const labels = filteredHistory.map(entry => {\r\n          const date = new Date(entry.userLocalDate);\r\n          return date.toLocaleDateString('fr-FR', {\r\n            day: '2-digit',\r\n            month: 'short',\r\n          });\r\n        });\r\n  \r\n        const gratitudeHistory = historyData\r\n          .map(entry => entry.phraseGratitude)\r\n          .filter(phrase => phrase && phrase.trim() !== \"\");\r\n  \r\n        const gratitudeDates = historyData\r\n          .map(entry => new Date(entry.userLocalDate).toLocaleDateString())\r\n          .filter((_, index) => gratitudeHistory[index]);\r\n  \r\n        setDatesGratitude(gratitudeDates);\r\n        setHistoriqueGratitude(gratitudeHistory);\r\n  \r\n        const data = {\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: feelingsData.feelings[0],\r\n              data: historyData.map(entry => entry.feeling1),\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling1\r\n            },\r\n            {\r\n              label: feelingsData.feelings[1],\r\n              data: historyData.map(entry => entry.feeling2),\r\n              borderColor: 'rgba(153, 102, 255, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling2\r\n            },\r\n            {\r\n              label: feelingsData.feelings[2],\r\n              data: historyData.map(entry => entry.feeling3),\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling3\r\n            },\r\n            {\r\n              label: feelingsData.feelings[3],\r\n              data: historyData.map(entry => entry.feeling4),\r\n              borderColor: 'rgba(255, 206, 86, 1)',\r\n              borderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHoverRadius: 4,\r\n              fill: false,\r\n              hidden: !showFeeling4\r\n            },\r\n            {\r\n              label: 'Règles',\r\n              data: feelingsData.regles?.map((regle) => (regle === true ? 0 : null)) || [],\r\n              borderColor: 'rgba(0, 0, 0, 1)',\r\n              backgroundColor: 'rgba(0, 0, 0, 1)',\r\n              borderWidth: 4,\r\n              pointRadius: 4,\r\n              pointHoverRadius: 4,\r\n              fill: true,\r\n              hidden: !showRegles\r\n            }\r\n          ],\r\n        };\r\n  \r\n        setChartData(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des données :\", error);\r\n      }\r\n    };\r\n  \r\n    fetchUserFeelingsAndHistory();\r\n  }, [showFeeling1, showFeeling2, showFeeling3, showFeeling4, showRegles,timeRange]);\r\n  \r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          font: {\r\n            weight: 'bold',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Arial',\r\n            weight: 'bold',\r\n          },\r\n          boxWidth: 15,\r\n          boxHeight: 5,\r\n          padding: 20,\r\n          color: '#333',\r\n        },\r\n      },\r\n      zoom: {\r\n        pan: {\r\n          enabled: true,\r\n          mode: 'x',\r\n        },\r\n        zoom: {\r\n          wheel: {\r\n            enabled: true,\r\n          },\r\n          pinch: {\r\n            enabled: true\r\n          },\r\n          mode: 'x',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h6>Historique des Émotions</h6>\r\n\r\n        <div className=\"chart-container\">\r\n          {chartData.labels && <Line data={chartData} options={options} />}\r\n        </div>\r\n        <div className=\"time-filter\">\r\n          <button onClick={() => setTimeRange('1semaine')}>1 semaine</button>\r\n          <button onClick={() => setTimeRange('1hour')}>1 mois</button>\r\n          <button onClick={() => setTimeRange('3mois')}>3 mois</button>\r\n          <button onClick={() => setTimeRange('6hour')}>6 mois</button>\r\n          <button onClick={() => setTimeRange('tout')}>Tout</button>\r\n        </div>\r\n\r\n        {/* <div className=\"checkbox-container\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling1}\r\n              onChange={() => setShowFeeling1(!showFeeling1)}\r\n            />\r\n            {feelings[0]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling2}\r\n              onChange={() => setShowFeeling2(!showFeeling2)}\r\n            />\r\n            {feelings[1]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling3}\r\n              onChange={() => setShowFeeling3(!showFeeling3)}\r\n            />\r\n            {feelings[2]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling4}\r\n              onChange={() => setShowFeeling4(!showFeeling4)}\r\n            />\r\n            {feelings[3]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showRegles}\r\n              onChange={() => setShowRegles(!showRegles)}\r\n            />\r\n            Menstruation\r\n          </label>\r\n        </div> */}\r\n        <div className=\"checkbox-container\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling1}\r\n              onChange={() => setShowFeeling1(!showFeeling1)}\r\n            />\r\n            {feelings[0]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling2}\r\n              onChange={() => setShowFeeling2(!showFeeling2)}\r\n            />\r\n            {feelings[1]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling3}\r\n              onChange={() => setShowFeeling3(!showFeeling3)}\r\n            />\r\n            {feelings[2]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showFeeling4}\r\n              onChange={() => setShowFeeling4(!showFeeling4)}\r\n            />\r\n            {feelings[3]}\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showRegles}\r\n              onChange={() => setShowRegles(!showRegles)}\r\n            />\r\n            Règles\r\n          </label>\r\n        </div>\r\n\r\n\r\n        <div className=\"historique-gratitude\">\r\n          <div className='h7'>Historique des mantras</div>\r\n          <div className='fenetre-gratitude'>\r\n            {historiqueGratitude.length > 0 ? (\r\n              historiqueGratitude.map((phrase, index) => (\r\n                <div key={index}>\r\n                  <p>{phrase} : (<em>{gratitudeDates[index]})</em></p>\r\n                  <hr className=\"hr-phraseGratitude\" />\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <li>Aucune phrase de gratitude disponible</li>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <Link to=\"/\">\r\n          <button type=\"button\" className=\"submit-button-history\">\r\n            Emotions\r\n          </button>\r\n        </Link>\r\n        <div className=\"button-container\">\r\n          <LogoutButton />\r\n        </div>\r\n        <p className =\"droits\">© 2025 myDay. Tous droits réservés.\r\n        Cette application et son contenu sont protégés par les lois en vigueur sur la propriété intellectuelle. </p>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Historique;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}