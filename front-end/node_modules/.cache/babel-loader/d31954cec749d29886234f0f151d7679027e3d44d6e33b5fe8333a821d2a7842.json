{"ast":null,"code":"import React,{useState}from'react';import'./styles/Home.css';import'./styles/Mobile.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Register(){const[pseudo,setPseudo]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[feelings,setFeelings]=useState([\"\",\"\",\"\",\"\"]);// 4 émotions par défaut\nconst[acceptedTerms,setAcceptedTerms]=useState(false);const[errorMessage,setErrorMessage]=useState('');// const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!acceptedTerms) {\n//         alert(\"Vous devez accepter les conditions générales pour continuer.\");\n//         return;\n//     }\n//     if (password !== confirmPassword) {\n//         setErrorMessage(\"Les mots de passe ne correspondent pas.\");\n//         return;\n//     }\n//     setErrorMessage(\"\"); // Réinitialise le message d'erreur\n//     const userData = {\n//         pseudo,\n//         password,\n//         feelings,\n//     };\n//     console.log('User Data:', userData);\n//     // Envoi des données à l'API ou base de données\n//     try {\n//         const response = await fetch(\"http://localhost:4000/Register\", {\n//             method: \"POST\",\n//             headers: { \"Content-Type\": \"application/json\" },\n//             body: JSON.stringify(userData),\n//         });\n//         const data = await response.json();\n//         console.log(\"Réponse du serveur :\", data);\n//     } catch (error) {\n//         console.error(\"Erreur lors de l'envoi :\", error);\n//     }\n//     fetch('/Register', {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         // body: JSON.stringify({ pseudo: document.getElementById(\"pseudo\").value })\n//         body: JSON.stringify(userData)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//         console.log(\"Réponse serveur :\", data);\n//         if (data.pseudo) {\n//             window.location.href = \"/Login\"; // ✅ La redirection se fait ici\n//         }\n//     })\n//     .catch(error => console.error(\"Erreur :\", error));\n// };\nconst handleSubmit=async e=>{e.preventDefault();if(!acceptedTerms){alert(\"Vous devez accepter les conditions générales pour continuer.\");return;}if(password!==confirmPassword){setErrorMessage(\"Les mots de passe ne correspondent pas.\");return;}setErrorMessage(\"\");// Réinitialise le message d'erreur\nconst userData={pseudo,password,feelings};console.log('User Data:',userData);try{const response=await fetch(\"http://localhost:4000/Register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});const data=await response.json();console.log(\"Réponse du serveur :\",data);if(data.pseudo){window.location.href=\"/Login\";// ✅ La redirection se fait ici\n}}catch(error){console.error(\"Erreur lors de l'envoi :\",error);}};const handleFeelingChange=(index,value)=>{const updatedFeelings=[...feelings];updatedFeelings[index]=value;setFeelings(updatedFeelings);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"M\"}),/*#__PURE__*/_jsx(\"span\",{children:\"y\"}),/*#__PURE__*/_jsx(\"span\",{children:\"D\"}),/*#__PURE__*/_jsx(\"span\",{children:\"a\"}),/*#__PURE__*/_jsx(\"span\",{children:\"y\"})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Donn\\xE9es personnelles\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pseudo\",children:\"Pseudo : \"}),/*#__PURE__*/_jsx(\"input\",{className:\"login-input\",type:\"text\",id:\"pseudo\",value:pseudo,onChange:e=>setPseudo(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Mot de passe : \"}),/*#__PURE__*/_jsx(\"input\",{className:\"login-input\",type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirmez le mot de passe : \"}),/*#__PURE__*/_jsx(\"input\",{className:\"login-input\",type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsx(\"h5\",{children:\"Tes \\xE9motions \\xE0 suivre\"}),feelings.map((feeling,index)=>/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:`feeling_${index+1}`,children:[\"\\xC9motion #\",index+1,\" : \"]}),/*#__PURE__*/_jsx(\"input\",{className:\"login-input\",type:\"text\",id:`feeling_${index+1}`,value:feeling,onChange:e=>handleFeelingChange(index,e.target.value),required:true})]},index)),/*#__PURE__*/_jsx(\"hr\",{className:\"hr\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"terms\",checked:acceptedTerms,onChange:e=>setAcceptedTerms(e.target.checked)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"terms\",children:\" J'accepte les conditions g\\xE9n\\xE9rales\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-button\",type:\"submit\",disabled:!acceptedTerms,children:\"Soumettre\"})]})]});}export default Register;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Register","pseudo","setPseudo","password","setPassword","confirmPassword","setConfirmPassword","feelings","setFeelings","acceptedTerms","setAcceptedTerms","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","alert","userData","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","window","location","href","error","handleFeelingChange","index","value","updatedFeelings","className","children","onSubmit","htmlFor","type","id","onChange","target","required","map","feeling","checked","disabled"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/Home.css';\r\nimport './styles/Mobile.css';\r\n\r\nfunction Register() {\r\n    const [pseudo, setPseudo] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]); // 4 émotions par défaut\r\n    const [acceptedTerms, setAcceptedTerms] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     if (!acceptedTerms) {\r\n    //         alert(\"Vous devez accepter les conditions générales pour continuer.\");\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (password !== confirmPassword) {\r\n    //         setErrorMessage(\"Les mots de passe ne correspondent pas.\");\r\n    //         return;\r\n    //     }\r\n\r\n    //     setErrorMessage(\"\"); // Réinitialise le message d'erreur\r\n\r\n    //     const userData = {\r\n    //         pseudo,\r\n    //         password,\r\n    //         feelings,\r\n    //     };\r\n\r\n    //     console.log('User Data:', userData);\r\n    //     // Envoi des données à l'API ou base de données\r\n\r\n    //     try {\r\n    //         const response = await fetch(\"http://localhost:4000/Register\", {\r\n    //             method: \"POST\",\r\n    //             headers: { \"Content-Type\": \"application/json\" },\r\n    //             body: JSON.stringify(userData),\r\n    //         });\r\n    \r\n    //         const data = await response.json();\r\n    //         console.log(\"Réponse du serveur :\", data);\r\n    //     } catch (error) {\r\n    //         console.error(\"Erreur lors de l'envoi :\", error);\r\n    //     }\r\n\r\n    //     fetch('/Register', {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" },\r\n    //         // body: JSON.stringify({ pseudo: document.getElementById(\"pseudo\").value })\r\n    //         body: JSON.stringify(userData)\r\n    //     })\r\n    //     .then(response => response.json())\r\n    //     .then(data => {\r\n    //         console.log(\"Réponse serveur :\", data);\r\n    //         if (data.pseudo) {\r\n    //             window.location.href = \"/Login\"; // ✅ La redirection se fait ici\r\n    //         }\r\n    //     })\r\n    //     .catch(error => console.error(\"Erreur :\", error));\r\n    // };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!acceptedTerms) {\r\n            alert(\"Vous devez accepter les conditions générales pour continuer.\");\r\n            return;\r\n        }\r\n    \r\n        if (password !== confirmPassword) {\r\n            setErrorMessage(\"Les mots de passe ne correspondent pas.\");\r\n            return;\r\n        }\r\n    \r\n        setErrorMessage(\"\"); // Réinitialise le message d'erreur\r\n    \r\n        const userData = {\r\n            pseudo,\r\n            password,\r\n            feelings,\r\n        };\r\n    \r\n        console.log('User Data:', userData);\r\n    \r\n        try {\r\n            const response = await fetch(\"http://localhost:4000/Register\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(userData),\r\n            });\r\n    \r\n            const data = await response.json();\r\n            console.log(\"Réponse du serveur :\", data);\r\n    \r\n            if (data.pseudo) {\r\n                window.location.href = \"/Login\"; // ✅ La redirection se fait ici\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de l'envoi :\", error);\r\n        }\r\n    };\r\n    \r\n\r\n    const handleFeelingChange = (index, value) => {\r\n        const updatedFeelings = [...feelings];\r\n        updatedFeelings[index] = value;\r\n        setFeelings(updatedFeelings);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <h1>\r\n                    <span>M</span><span>y</span><span>D</span><span>a</span><span>y</span>\r\n                </h1>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <h5>Données personnelles</h5>\r\n                <h4>\r\n                    <label htmlFor=\"pseudo\">Pseudo : </label>\r\n                    <input\r\n                        className=\"login-input\"\r\n                        type=\"text\"\r\n                        id=\"pseudo\"\r\n                        value={pseudo}\r\n                        onChange={(e) => setPseudo(e.target.value)}\r\n                        required\r\n                    />\r\n                </h4>\r\n                <h4>\r\n                    <label htmlFor=\"password\">Mot de passe : </label>\r\n                    <input\r\n                        className=\"login-input\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </h4>\r\n                <h4>\r\n                    <label htmlFor=\"confirmPassword\">Confirmez le mot de passe : </label>\r\n                    <input\r\n                        className=\"login-input\"\r\n                        type=\"password\"\r\n                        id=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </h4>\r\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n                <h5>Tes émotions à suivre</h5>\r\n                {feelings.map((feeling, index) => (\r\n                    <h4 key={index}>\r\n                        <label htmlFor={`feeling_${index + 1}`}>Émotion #{index + 1} : </label>\r\n                        <input\r\n                            className=\"login-input\"\r\n                            type=\"text\"\r\n                            id={`feeling_${index + 1}`}\r\n                            value={feeling}\r\n                            onChange={(e) => handleFeelingChange(index, e.target.value)}\r\n                            required\r\n                        />\r\n                    </h4>\r\n                ))}\r\n\r\n                <hr className=\"hr\" />\r\n\r\n                <h4>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"terms\"\r\n                        checked={acceptedTerms}\r\n                        onChange={(e) => setAcceptedTerms(e.target.checked)}\r\n                    />\r\n                    <label htmlFor=\"terms\"> J'accepte les conditions générales</label>\r\n                </h4>\r\n                <button className=\"submit-button\" type=\"submit\" disabled={!acceptedTerms}>\r\n                    Soumettre\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}