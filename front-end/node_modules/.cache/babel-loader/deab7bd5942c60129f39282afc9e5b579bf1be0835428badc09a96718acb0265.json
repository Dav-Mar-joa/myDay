{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import axios from'axios';import LogoutButton from'./LogoutButton';// Importer le composant LogoutButton\nimport{Link}from'react-router-dom';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const Historique=()=>{const[chartData,setChartData]=useState({});const[feelings,setFeelings]=useState([\"\",\"\",\"\",\"\"]);const[phraseGratitude,setPhraseGratitude]=useState(\"\");const[historiqueGratitude,setHistoriqueGratitude]=useState([]);// Nouveau state pour l'historique des phrases de gratitude\nuseEffect(()=>{const fetchUserFeelings=async()=>{try{const API_URL=window.location.hostname===\"localhost\"?\"http://localhost:4000\":\"https://myday-back.onrender.com\";const response=await fetch(`${API_URL}/user-feelings`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"},credentials:'include'});const dataFeelings=await response.json();if(dataFeelings&&dataFeelings.feelings){setFeelings(dataFeelings.feelings);// Met à jour l'état avec les émotions\nsetHistoriqueGratitude(dataFeelings.phraseGratitude||[]);console.log(\"bla\",dataFeelings.phraseGratitude);// S'assurer que phraseGratitude est un tableau\n}}catch(error){console.error(\"Erreur lors de la récupération des émotions :\",error);}};fetchUserFeelings();const fetchHistory=async()=>{try{const API_URL=window.location.hostname===\"localhost\"?\"http://localhost:4000\":\"https://myday-back.onrender.com\";const response=await axios.get(`${API_URL}/user-history`,{withCredentials:true});const historyData=response.data;const labels=historyData.map(entry=>new Date(entry.userLocalDate).toLocaleDateString());// Récupérer l'historique des phrases de gratitude\nconst gratitudeHistory=historyData.map(entry=>entry.gratitudePhrase);setHistoriqueGratitude(gratitudeHistory);// Mettre à jour l'historique des phrases de gratitude\nconst data={labels,datasets:[{label:feelings[0],data:historyData.map(entry=>entry.feeling1),borderColor:'rgba(75, 192, 192, 1)',fill:false},{label:feelings[1],data:historyData.map(entry=>entry.feeling2),borderColor:'rgba(153, 102, 255, 1)',fill:false},{label:feelings[2],data:historyData.map(entry=>entry.feeling3),borderColor:'rgba(255, 99, 132, 1)',fill:false},{label:feelings[3],data:historyData.map(entry=>entry.feeling4),borderColor:'rgba(255, 206, 86, 1)',fill:false}]};setChartData(data);}catch(error){console.error(\"Erreur lors de la récupération de l'historique :\",error);}};fetchHistory();},[feelings]);const options={scales:{x:{ticks:{font:{weight:'bold'// Rendre les labels en gras\n}}}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Historique des \\xC9motions\"}),chartData.labels&&/*#__PURE__*/_jsx(Line,{data:chartData,options:options}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"submit-button\",children:\"Emotions\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(LogoutButton,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"historique-gratitude\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Historique des Phrases de Gratitude\"}),/*#__PURE__*/_jsx(\"ul\",{children:historiqueGratitude.length>0?historiqueGratitude.map((phrase,index)=>/*#__PURE__*/_jsx(\"li\",{children:phrase},index)):/*#__PURE__*/_jsx(\"li\",{children:\"Aucune phrase de gratitude disponible\"})})]})]})});};export default Historique;","map":{"version":3,"names":["React","useState","useEffect","Line","axios","LogoutButton","Link","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Historique","chartData","setChartData","feelings","setFeelings","phraseGratitude","setPhraseGratitude","historiqueGratitude","setHistoriqueGratitude","fetchUserFeelings","API_URL","window","location","hostname","response","fetch","method","headers","credentials","dataFeelings","json","console","log","error","fetchHistory","get","withCredentials","historyData","data","labels","map","entry","Date","userLocalDate","toLocaleDateString","gratitudeHistory","gratitudePhrase","datasets","label","feeling1","borderColor","fill","feeling2","feeling3","feeling4","options","scales","x","ticks","font","weight","children","className","to","type","length","phrase","index"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Historique.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport LogoutButton from './LogoutButton'; // Importer le composant LogoutButton\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Historique = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [feelings, setFeelings] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [phraseGratitude, setPhraseGratitude] = useState(\"\");\r\n  const [historiqueGratitude, setHistoriqueGratitude] = useState([]); // Nouveau state pour l'historique des phrases de gratitude\r\n\r\n  useEffect(() => {\r\n    const fetchUserFeelings = async () => {\r\n      try {\r\n        const API_URL =\r\n          window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:4000\"\r\n            : \"https://myday-back.onrender.com\";\r\n\r\n        const response = await fetch(`${API_URL}/user-feelings`, {\r\n          method: \"GET\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          credentials: 'include'\r\n        });\r\n\r\n        const dataFeelings = await response.json();\r\n\r\n        if (dataFeelings && dataFeelings.feelings) {\r\n          setFeelings(dataFeelings.feelings);  // Met à jour l'état avec les émotions\r\n          setHistoriqueGratitude(dataFeelings.phraseGratitude || []);\r\n          console.log(\"bla\",dataFeelings.phraseGratitude ) // S'assurer que phraseGratitude est un tableau\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des émotions :\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserFeelings();\r\n\r\n    const fetchHistory = async () => {\r\n      try {\r\n        const API_URL =\r\n          window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:4000\"\r\n            : \"https://myday-back.onrender.com\";\r\n\r\n        const response = await axios.get(`${API_URL}/user-history`, {\r\n          withCredentials: true,\r\n        });\r\n\r\n        const historyData = response.data;\r\n        const labels = historyData.map(entry => new Date(entry.userLocalDate).toLocaleDateString());\r\n\r\n        // Récupérer l'historique des phrases de gratitude\r\n        const gratitudeHistory = historyData.map(entry => entry.gratitudePhrase);\r\n\r\n        setHistoriqueGratitude(gratitudeHistory); // Mettre à jour l'historique des phrases de gratitude\r\n\r\n        const data = {\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: feelings[0],\r\n              data: historyData.map(entry => entry.feeling1),\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              fill: false,\r\n            },\r\n            {\r\n              label: feelings[1],\r\n              data: historyData.map(entry => entry.feeling2),\r\n              borderColor: 'rgba(153, 102, 255, 1)',\r\n              fill: false,\r\n            },\r\n            {\r\n              label: feelings[2],\r\n              data: historyData.map(entry => entry.feeling3),\r\n              borderColor: 'rgba(255, 99, 132, 1)',\r\n              fill: false,\r\n            },\r\n            {\r\n              label: feelings[3],\r\n              data: historyData.map(entry => entry.feeling4),\r\n              borderColor: 'rgba(255, 206, 86, 1)',\r\n              fill: false,\r\n            },\r\n          ],\r\n        };\r\n\r\n        setChartData(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération de l'historique :\", error);\r\n      }\r\n    };\r\n\r\n    fetchHistory();\r\n  }, [feelings]);\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          font: {\r\n            weight: 'bold', // Rendre les labels en gras\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h6>Historique des Émotions</h6>\r\n        {chartData.labels && (\r\n          <Line data={chartData} options={options} />\r\n        )}\r\n        <Link to=\"/\">\r\n          <button type=\"button\" className=\"submit-button\">\r\n            Emotions\r\n          </button>\r\n        </Link>\r\n        <div className='button-container'>\r\n          <LogoutButton />\r\n        </div>\r\n\r\n        {/* Afficher l'historique des phrases de gratitude sous le graphique */}\r\n        <div className=\"historique-gratitude\">\r\n          <h6>Historique des Phrases de Gratitude</h6>\r\n          <ul>\r\n            {historiqueGratitude.length > 0 ? (\r\n              historiqueGratitude.map((phrase, index) => (\r\n                <li key={index}>{phrase}</li>\r\n              ))\r\n            ) : (\r\n              <li>Aucune phrase de gratitude disponible</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Historique;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}