{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./styles/Home.css';import'./styles/Mobile.css';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Settings(){const[feelings,setFeelings]=useState([]);const[editingIndex,setEditingIndex]=useState(null);const[modifiedFeelings,setModifiedFeelings]=useState({});const[selectedOption,setSelectedOption]=useState('');// Ajouté pour gérer le thème\nconst[pseudo,setPseudo]=useState(\"\");const handleSelectionChange=e=>{console.log(\"1\");const newTheme=e.target.value;setSelectedOption(newTheme);document.body.className=newTheme;console.log(\"theme !!!!! \",newTheme);// const pseudo = localStorage.getItem('username',\"qs\");\n// const pseudo = \"aa\";\nconsole.log(\"localStorage avant /setTheme!!!!! \",localStorage);if(pseudo){fetch('/setTheme',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({pseudo,theme:newTheme})}).then(res=>res.json()).then(data=>{console.log(\"set theme data\",data);if(!data.success){console.error(\"Échec de l'enregistrement du thème.\");}}).catch(err=>console.error(\"Erreur en envoyant le thème :\",err));}};// useEffect(() => {\n//     fetch('/getFeelings')\n//     .then(res => res.json())\n//     .then(data => {\n//         setFeelings(data.feelings)\n//         // setPseudo(data.pseudo);\n//         console.log(\"2\")\n//         console.log(\"--------------->>>>>> >>>>>>>>>> -------------\")\n//         const donnees = data\n//         console.log(\"data :\", donnees);\n//         const pseudo2 = data.pseudo;  // Récupérer le pseudo depuis les données\n//         console.log(\"pseudo récupéré depuis /getFeelings :\", pseudo2);\n//         console.log(\"--------------->>>>>> >>>>>>>>>> -------------\")\n//         setPseudo(pseudo2);\n//     })\n//     .catch(err => console.error(\"Erreur en récupérant les émotions :\", err));\n// // Charger le thème depuis la base\n// // const pseudo = localStorage.getItem('username');\n// // const pseudo = 'aa';\n// console.log(\"localStorage avant /getTheme!!!!! \", localStorage)\n// if (pseudo) {\n//     fetch('/getTheme', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ pseudo })\n//     })\n//     .then(res => res.json())\n//     .then(data => {\n//         if (data.success && data.theme) {\n//             setSelectedOption(data.theme);\n//             document.body.className = data.theme;\n//         }\n//     })\n//     .catch(err => console.error(\"Erreur en récupérant le thème :\", err));\n// }\n// }, []);\nuseEffect(()=>{const fetchData=async()=>{try{const res=await fetch('/getFeelings');const data=await res.json();const historyResponse=await axios.get(`${API_URL}/user-history`,{withCredentials:true});const historyData=historyResponse.data;console.log(\"historyData :\",historyData);setFeelings(data.feelings);const pseudo2=data.pseudo;console.log(\"pseudo récupéré depuis /getFeelings :\",pseudo2);setPseudo(pseudo2);// Charger le thème après avoir récupéré le pseudo\nif(pseudo2){const themeRes=await fetch('/getTheme',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({pseudo:pseudo2})});const themeData=await themeRes.json();if(themeData.success&&themeData.theme){setSelectedOption(themeData.theme);document.body.className=themeData.theme;}}}catch(err){console.error(\"Erreur lors du chargement des données :\",err);}};fetchData();},[]);useEffect(()=>{if(pseudo){fetch('/getTheme',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({pseudo})}).then(res=>res.json()).then(data=>{if(data.success&&data.theme){setSelectedOption(data.theme);document.body.className=data.theme;}}).catch(err=>console.error(\"Erreur en récupérant le thème :\",err));}},[pseudo]);// Se déclenche uniquement quand pseudo est défini\nconst handleInputChange=(index,value)=>{setModifiedFeelings(prev=>({...prev,[index]:value}));};// const updateFeeling = (index) => {\n//     const newFeeling = modifiedFeelings[index];\n//     if (!newFeeling) return;\n//     fetch('/updateFeeling', {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ index, newFeeling })\n//     })\n//     .then(res => res.json())\n//     .then(data => {\n//         if (data.success) {\n//             const updatedFeelings = [...feelings];\n//             updatedFeelings[index] = newFeeling;\n//             setFeelings(updatedFeelings);\n//             setEditingIndex(null);\n//             setModifiedFeelings({});\n//         } else {\n//             console.error(\"Erreur côté serveur :\", data.message);\n//         }\n//     })\n//     .catch(err => console.error(\"Erreur en mettant à jour :\", err));\n// };\nconst updateFeeling=index=>{const newFeeling=modifiedFeelings[index];if(!newFeeling)return;fetch('/updateFeeling',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({index,newFeeling})}).then(res=>res.json()).then(data=>{if(data.success){const updatedFeelings=[...feelings];console.log(\"updatedFeelings : \",updatedFeelings);updatedFeelings[index]=newFeeling;console.log(\"updatedFeelings [index] : \",updatedFeelings[index]);setFeelings(updatedFeelings);// met à jour l'affichage\nsetEditingIndex(null);// quitte le mode édition\nsetModifiedFeelings(prev=>{const updated={...prev};console.log(\"upadated : \",updated);delete updated[index];const del=delete updated[index];console.log(\"del : \",del);// nettoie le champ modifié\nreturn updated;});}else{console.error(\"Erreur côté serveur :\",data.message);}}).catch(err=>console.error(\"Erreur en mettant à jour :\",err));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"m\"}),/*#__PURE__*/_jsx(\"span\",{children:\"y\"}),/*#__PURE__*/_jsx(\"span\",{children:\"D\"}),/*#__PURE__*/_jsx(\"span\",{children:\"a\"}),/*#__PURE__*/_jsx(\"span\",{children:\"y\"})]})}),/*#__PURE__*/_jsx(\"h5\",{children:\"Theme : \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"theme-select\",className:\"theme-select\",value:selectedOption,onChange:handleSelectionChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"colorful\",children:\"Printemps\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ocean\",children:\"Oc\\xE9an\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dark\",children:\"Sombre\"})]}),/*#__PURE__*/_jsx(\"h5\",{children:\"Emotions :\"}),/*#__PURE__*/_jsx(\"ol\",{children:feelings.map((f,index)=>{var _modifiedFeelings$ind;return/*#__PURE__*/_jsxs(\"ol\",{children:[editingIndex===index?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{className:\"inputFeelingsSettings\",type:\"text\",value:(_modifiedFeelings$ind=modifiedFeelings[index])!==null&&_modifiedFeelings$ind!==void 0?_modifiedFeelings$ind:f,onChange:e=>handleInputChange(index,e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"button-option\",onClick:()=>updateFeeling(index),children:\"\\u2714\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button-option\",onClick:()=>{setEditingIndex(null);setModifiedFeelings(prev=>{const updated={...prev};delete updated[index];return updated;});},children:\"\\u274C\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[f,/*#__PURE__*/_jsx(\"button\",{className:\"button-option\",onClick:()=>setEditingIndex(index),children:\"\\u270F\\uFE0F\"})]}),index<feelings.length-1&&/*#__PURE__*/_jsx(\"hr\",{className:\"hr-settings\"})]},index);})}),/*#__PURE__*/_jsx(Link,{to:\"/EmotionsSettings\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"submit-button\",children:\"Roue des \\xE9motions\"})}),/*#__PURE__*/_jsx(\"hr\",{className:\"hr\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"submit-button\",children:\"Mes \\xE9motions\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"droits\",children:\"\\xA9 2025 myDay. Tous droits r\\xE9serv\\xE9s. Cette application, ainsi que l\\u2019ensemble de son contenu, est prot\\xE9g\\xE9e par les lois en vigueur relatives \\xE0 la propri\\xE9t\\xE9 intellectuelle. Les donn\\xE9es qu\\u2019elle contient sont chiffr\\xE9es afin d\\u2019en garantir la s\\xE9curit\\xE9.\"})]});}export default Settings;","map":{"version":3,"names":["React","useEffect","useState","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Settings","feelings","setFeelings","editingIndex","setEditingIndex","modifiedFeelings","setModifiedFeelings","selectedOption","setSelectedOption","pseudo","setPseudo","handleSelectionChange","e","console","log","newTheme","target","value","document","body","className","localStorage","fetch","method","headers","JSON","stringify","theme","then","res","json","data","success","error","catch","err","fetchData","historyResponse","axios","get","API_URL","withCredentials","historyData","pseudo2","themeRes","themeData","handleInputChange","index","prev","updateFeeling","newFeeling","updatedFeelings","updated","del","message","children","id","onChange","map","f","_modifiedFeelings$ind","type","onClick","length","to"],"sources":["C:/Users/850_G5/Documents/Formation_Dot_Net/myday/front-end/src/Settings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './styles/Home.css';\r\nimport './styles/Mobile.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Settings() {\r\n    const [feelings, setFeelings] = useState([]);\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n    const [modifiedFeelings, setModifiedFeelings] = useState({});\r\n    const [selectedOption, setSelectedOption] = useState(''); // Ajouté pour gérer le thème\r\n    const [pseudo, setPseudo] = useState(\"\");\r\n\r\n    const handleSelectionChange = (e) => {\r\n        console.log(\"1\")\r\n        const newTheme = e.target.value;\r\n        setSelectedOption(newTheme);\r\n        document.body.className = newTheme;\r\n        console.log(\"theme !!!!! \", newTheme)\r\n        // const pseudo = localStorage.getItem('username',\"qs\");\r\n        // const pseudo = \"aa\";\r\n        console.log(\"localStorage avant /setTheme!!!!! \", localStorage )\r\n        \r\n        if (pseudo) {\r\n            fetch('/setTheme', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ pseudo, theme: newTheme }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(\"set theme data\",data)\r\n                if (!data.success) {\r\n                    console.error(\"Échec de l'enregistrement du thème.\");\r\n                }\r\n            })\r\n            .catch(err => console.error(\"Erreur en envoyant le thème :\", err));\r\n        }\r\n    };\r\n    \r\n\r\n    // useEffect(() => {\r\n        \r\n    //     fetch('/getFeelings')\r\n    //     .then(res => res.json())\r\n    //     .then(data => {\r\n\r\n    //         setFeelings(data.feelings)\r\n    //         // setPseudo(data.pseudo);\r\n    //         console.log(\"2\")\r\n    //         console.log(\"--------------->>>>>> >>>>>>>>>> -------------\")\r\n    //         const donnees = data\r\n    //         console.log(\"data :\", donnees);\r\n    //         const pseudo2 = data.pseudo;  // Récupérer le pseudo depuis les données\r\n    //         console.log(\"pseudo récupéré depuis /getFeelings :\", pseudo2);\r\n    //         console.log(\"--------------->>>>>> >>>>>>>>>> -------------\")\r\n    //         setPseudo(pseudo2);\r\n    //     })\r\n    //     .catch(err => console.error(\"Erreur en récupérant les émotions :\", err));\r\n\r\n    // // Charger le thème depuis la base\r\n    // // const pseudo = localStorage.getItem('username');\r\n    // // const pseudo = 'aa';\r\n    // console.log(\"localStorage avant /getTheme!!!!! \", localStorage)\r\n    // if (pseudo) {\r\n    //     fetch('/getTheme', {\r\n    //         method: 'POST',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         body: JSON.stringify({ pseudo })\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(data => {\r\n    //         if (data.success && data.theme) {\r\n    //             setSelectedOption(data.theme);\r\n    //             document.body.className = data.theme;\r\n    //         }\r\n    //     })\r\n     \r\n    //     .catch(err => console.error(\"Erreur en récupérant le thème :\", err));\r\n    // }\r\n    // }, []);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await fetch('/getFeelings');\r\n                const data = await res.json();\r\n    \r\n                const historyResponse = await axios.get(`${API_URL}/user-history`, {\r\n                    withCredentials: true,\r\n                });\r\n                const historyData = historyResponse.data;\r\n                console.log(\"historyData :\", historyData);\r\n    \r\n                setFeelings(data.feelings);\r\n                const pseudo2 = data.pseudo;\r\n                console.log(\"pseudo récupéré depuis /getFeelings :\", pseudo2);\r\n                setPseudo(pseudo2);\r\n    \r\n                // Charger le thème après avoir récupéré le pseudo\r\n                if (pseudo2) {\r\n                    const themeRes = await fetch('/getTheme', {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ pseudo: pseudo2 })\r\n                    });\r\n                    const themeData = await themeRes.json();\r\n                    if (themeData.success && themeData.theme) {\r\n                        setSelectedOption(themeData.theme);\r\n                        document.body.className = themeData.theme;\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Erreur lors du chargement des données :\", err);\r\n            }\r\n        };\r\n    \r\n        fetchData();\r\n    }, []);\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        if (pseudo) {\r\n            fetch('/getTheme', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ pseudo })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.success && data.theme) {\r\n                    setSelectedOption(data.theme);\r\n                    document.body.className = data.theme;\r\n                }\r\n            })\r\n            .catch(err => console.error(\"Erreur en récupérant le thème :\", err));\r\n        }\r\n    }, [pseudo]); // Se déclenche uniquement quand pseudo est défini\r\n    \r\n\r\n    const handleInputChange = (index, value) => {\r\n        setModifiedFeelings(prev => ({\r\n            ...prev,\r\n            [index]: value\r\n        }));\r\n    };\r\n\r\n\r\n    // const updateFeeling = (index) => {\r\n    //     const newFeeling = modifiedFeelings[index];\r\n    //     if (!newFeeling) return;\r\n\r\n    //     fetch('/updateFeeling', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({ index, newFeeling })\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(data => {\r\n    //         if (data.success) {\r\n    //             const updatedFeelings = [...feelings];\r\n    //             updatedFeelings[index] = newFeeling;\r\n    //             setFeelings(updatedFeelings);\r\n    //             setEditingIndex(null);\r\n    //             setModifiedFeelings({});\r\n    //         } else {\r\n    //             console.error(\"Erreur côté serveur :\", data.message);\r\n    //         }\r\n    //     })\r\n    //     .catch(err => console.error(\"Erreur en mettant à jour :\", err));\r\n    // };\r\n    const updateFeeling = (index) => {\r\n        const newFeeling = modifiedFeelings[index];\r\n        if (!newFeeling) return;\r\n    \r\n        fetch('/updateFeeling', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ index, newFeeling })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                const updatedFeelings = [...feelings];\r\n                console.log(\"updatedFeelings : \",updatedFeelings)\r\n                updatedFeelings[index] = newFeeling;\r\n                console.log(\"updatedFeelings [index] : \",updatedFeelings[index])\r\n                setFeelings(updatedFeelings);           // met à jour l'affichage\r\n                setEditingIndex(null);                  // quitte le mode édition\r\n                setModifiedFeelings(prev => {\r\n                    const updated = { ...prev };\r\n                    console.log(\"upadated : \",updated)\r\n                    delete updated[index]; \r\n                    const del = delete updated[index];\r\n                    console.log(\"del : \",del)             // nettoie le champ modifié\r\n                    return updated;\r\n                });\r\n            } else {\r\n                console.error(\"Erreur côté serveur :\", data.message);\r\n            }\r\n        })\r\n        .catch(err => console.error(\"Erreur en mettant à jour :\", err));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <h1>\r\n                    <span>m</span><span>y</span><span>D</span><span>a</span><span>y</span>\r\n                </h1>\r\n            </div>\r\n            \r\n            <h5>Theme : </h5>\r\n            {/* <select id=\"theme-select\" class=\"theme-select\">\r\n            <option value=\"colorful\">Coloré</option>\r\n            <option value=\"dark\">not dev</option>\r\n            </select> */}\r\n\r\n            <select id=\"theme-select\" className=\"theme-select\" value={selectedOption} onChange={handleSelectionChange}>\r\n                <option value=\"colorful\">Printemps</option>\r\n                <option value=\"ocean\">Océan</option>\r\n                <option value=\"dark\">Sombre</option>\r\n            </select>\r\n\r\n            <h5>Emotions :</h5>\r\n            <ol>\r\n                {/* {feelings.map((f, index) => (\r\n                    <ol key={index}>\r\n                        {editingIndex === index ? (\r\n                            <>\r\n                                <input\r\n                                    className='inputFeelingsSettings'\r\n                                    type=\"text\"\r\n                                    defaultValue={f}\r\n                                    onChange={(e) => handleInputChange(index, e.target.value)}\r\n                                />\r\n                                \r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => {updateFeeling(index)\r\n                                                    index=false\r\n                                    }\r\n                                    \r\n                                    }>✔️</button>\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => {setEditingIndex(null)\r\n                                                    index=false}\r\n                                    }>❌</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {f}\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => setEditingIndex(index)}>✏️</button>\r\n                            </>\r\n                        )}\r\n                         {index < feelings.length - 1 && <hr className=\"hr-settings\" />}\r\n                    </ol>\r\n                    \r\n                ))} */}\r\n                {feelings.map((f, index) => (\r\n                    <ol key={index}>\r\n                        {editingIndex === index ? (\r\n                            <>\r\n                                <input\r\n                                    className='inputFeelingsSettings'\r\n                                    type=\"text\"\r\n                                    value={modifiedFeelings[index] ?? f}\r\n                                    onChange={(e) => handleInputChange(index, e.target.value)}\r\n                                />\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => updateFeeling(index)}\r\n                                >✔️</button>\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => {\r\n                                        setEditingIndex(null);\r\n                                        setModifiedFeelings(prev => {\r\n                                            const updated = { ...prev };\r\n                                            delete updated[index];\r\n                                            return updated;\r\n                                        });\r\n                                    }}\r\n                                >❌</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {f}\r\n                                <button \r\n                                    className=\"button-option\"\r\n                                    onClick={() => setEditingIndex(index)}\r\n                                >✏️</button>\r\n                            </>\r\n                        )}\r\n                        {index < feelings.length - 1 && <hr className=\"hr-settings\" />}\r\n                    </ol>\r\n                ))}\r\n\r\n            </ol>\r\n\r\n            <Link to=\"/EmotionsSettings\">\r\n                <button type=\"button\" className=\"submit-button\">Roue des émotions</button>\r\n            </Link>\r\n\r\n            <hr className=\"hr\" />\r\n\r\n            <Link to=\"/\">\r\n                <button type=\"button\" className=\"submit-button\">Mes émotions</button>\r\n            </Link>\r\n\r\n           \r\n\r\n            <p className=\"droits\">\r\n                © 2025 myDay. Tous droits réservés. Cette application, ainsi que l’ensemble de son contenu, est protégée par les lois en vigueur relatives à la propriété intellectuelle. Les données qu’elle contient sont chiffrées afin d’en garantir la sécurité.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}